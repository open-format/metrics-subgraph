{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC165Base__InvalidInterfaceId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotTransitiveOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "BatchMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "_getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "batchMintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_royaltyBps",
          "type": "uint16"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isApprovedOrOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isApprovedOrOwnerOf",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50612f23806100206000396000f3fe6080604052600436106101f85760003560e01c8063600dd5ea1161010d578063a22cb465116100a0578063c87b56dd1161006f578063c87b56dd146105d7578063d28ce35e146105f7578063e8a3d48514610617578063e985e9c51461062c578063f2fde38b1461064c57600080fd5b8063a22cb4651461053f578063ac9650d81461055f578063b24f2d391461058c578063b88d4fde146105c457600080fd5b80638da5cb5b116100dc5780638da5cb5b146104d5578063938e3d7b146104ea57806395d89b411461050a5780639bcf7a151461051f57600080fd5b8063600dd5ea146104605780636352211e1461048057806363b45e2d146104a057806370a08231146104b557600080fd5b80632a55205a11610190578063430c20811161015f578063430c20811461039e5780634cc157df146103be5780634f558e79146104005780635003c7c3146104205780635881bfc11461044057600080fd5b80632a55205a146103175780633b1475a71461035657806342842e0e1461036b57806342966c681461037e57600080fd5b8063095ea7b3116101cc578063095ea7b3146102ae57806318160ddd146102c157806323b872dd146102e45780632419f51b146102f757600080fd5b806275a317146101fd57806301ffc9a71461021f57806306fdde0314610254578063081812fc14610276575b600080fd5b34801561020957600080fd5b5061021d6102183660046125c2565b61066c565b005b34801561022b57600080fd5b5061023f61023a366004612626565b610718565b60405190151581526020015b60405180910390f35b34801561026057600080fd5b5061026961075b565b60405161024b9190612693565b34801561028257600080fd5b506102966102913660046126a6565b6107f6565b6040516001600160a01b03909116815260200161024b565b61021d6102bc3660046126bf565b610843565b3480156102cd57600080fd5b506102d661085c565b60405190815260200161024b565b61021d6102f23660046126e9565b61087b565b34801561030357600080fd5b506102d66103123660046126a6565b6108a6565b34801561032357600080fd5b50610337610332366004612725565b6108b1565b604080516001600160a01b03909316835260208301919091520161024b565b34801561036257600080fd5b506102d66108ee565b61021d6103793660046126e9565b6108fd565b34801561038a57600080fd5b5061021d6103993660046126a6565b610922565b3480156103aa57600080fd5b5061023f6103b93660046126bf565b610930565b3480156103ca57600080fd5b506103de6103d93660046126a6565b61098f565b604080516001600160a01b03909316835261ffff90911660208301520161024b565b34801561040c57600080fd5b5061023f61041b3660046126a6565b6109a4565b34801561042c57600080fd5b5061021d61043b366004612747565b6109af565b34801561044c57600080fd5b5061021d61045b36600461279e565b610a5b565b34801561046c57600080fd5b5061021d61047b3660046126bf565b610c02565b34801561048c57600080fd5b5061029661049b3660046126a6565b610c34565b3480156104ac57600080fd5b506102d6610c3f565b3480156104c157600080fd5b506102d66104d036600461282c565b610c49565b3480156104e157600080fd5b50610296610cb2565b3480156104f657600080fd5b5061021d610505366004612847565b610cbc565b34801561051657600080fd5b50610269610ce9565b34801561052b57600080fd5b5061021d61053a36600461287c565b610d01565b34801561054b57600080fd5b5061021d61055a3660046128af565b610d30565b34801561056b57600080fd5b5061057f61057a3660046128e6565b610d44565b60405161024b919061295b565b34801561059857600080fd5b50600080516020612e6e833981519152546001600160a01b03811690600160a01b900461ffff166103de565b61021d6105d23660046129bd565b610e5f565b3480156105e357600080fd5b506102696105f23660046126a6565b610e85565b34801561060357600080fd5b506102d66106123660046126a6565b610ee2565b34801561062357600080fd5b50610269610f5d565b34801561063857600080fd5b5061023f610647366004612a39565b610f67565b34801561065857600080fd5b5061021d61066736600461282c565b610fa4565b610674610fe6565b6106bf5760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b60448201526064015b60405180910390fd5b6106d06106ca611009565b82611019565b6106db8260016110ad565b7f0c1b180fbb60448c5491c5ddc7c3a923854214b9ff70f90a7821333338971f92828260405161070c929190612a6c565b60405180910390a15050565b6001600160e01b0319811660009081527ffc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d8602052604081205460ff165b92915050565b60606107656110c7565b600201805461077390612a90565b80601f016020809104026020016040519081016040528092919081815260200182805461079f90612a90565b80156107ec5780601f106107c1576101008083540402835291602001916107ec565b820191906000526020600020905b8154815290600101906020018083116107cf57829003601f168201915b5050505050905090565b6000610801826110eb565b61081e576040516333d1c03960e21b815260040160405180910390fd5b6108266110c7565b60009283526006016020525060409020546001600160a01b031690565b8161084d81611127565b61085783836111e0565b505050565b6000806108676110c7565b600101546108736110c7565b540303919050565b826001600160a01b03811633146108955761089533611127565b6108a08484846111ec565b50505050565b600061075582610ee2565b6000806000806108c0866113d1565b90945084925061ffff1690506127106108d98287612ae0565b6108e39190612b15565b925050509250929050565b60006108f8611009565b905090565b826001600160a01b03811633146109175761091733611127565b6108a0848484611472565b61092d81600161148d565b50565b60008061093c83610c34565b9050806001600160a01b0316846001600160a01b0316148061096357506109638185610f67565b806109875750836001600160a01b031661097c846107f6565b6001600160a01b0316145b949350505050565b60008061099b836113d1565b91509150915091565b6000610755826110eb565b6109b7610fe6565b6109fd5760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b60448201526064016106b6565b610a0f610a08611009565b83836115fc565b5050610a1b83836110ad565b7f5443e3e7d8342ad07aca2b5d0e1679e55e0fb2c09df232251ce9acbb22c75465838383604051610a4e93929190612b29565b60405180910390a1505050565b600080516020612ece83398151915254610100900460ff16610a9057600080516020612ece8339815191525460ff1615610a94565b303b155b610b065760405162461bcd60e51b815260206004820152603760248201527f455243373231415f5f496e697469616c697a61626c653a20636f6e747261637460448201527f20697320616c726561647920696e697469616c697a656400000000000000000060648201526084016106b6565b600080516020612ece83398151915254610100900460ff16158015610b4257600080516020612ece833981519152805461ffff19166101011790555b610b4c858561168d565b610b55336116cb565b610b63838361ffff16611745565b610b82733cc6cdda760b79bafa08df41ecfa224f810dceb660016117fe565b610b946301ffc9a760e01b6001611976565b610ba66380ac58cd60e01b6001611976565b610bb8635b5e139f60e01b6001611976565b610bca63152a902d60e11b6001611976565b610bdc633d96f4ff60e11b6001611976565b8015610bfb57600080516020612ece833981519152805461ff00191690555b5050505050565b610c0a610fe6565b610c265760405162461bcd60e51b81526004016106b690612b59565b610c308282611745565b5050565b6000610755826119ec565b60006108f8611a91565b60006001600160a01b038216610c72576040516323d3ad8160e21b815260040160405180910390fd5b67ffffffffffffffff610c836110c7565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b60006108f8611aa7565b610cc4610fe6565b610ce05760405162461bcd60e51b81526004016106b690612b59565b61092d81611ad5565b6060610cf36110c7565b600301805461077390612a90565b610d09610fe6565b610d255760405162461bcd60e51b81526004016106b690612b59565b610857838383611bc9565b81610d3a81611127565b6108578383611ccc565b60608167ffffffffffffffff811115610d5f57610d5f61250f565b604051908082528060200260200182016040528015610d9257816020015b6060815260200190600190039081610d7d5790505b50905060005b82811015610e585760008030868685818110610db657610db6612b81565b9050602002810190610dc89190612b97565b604051610dd6929190612be5565b600060405180830381855af49150503d8060008114610e11576040519150601f19603f3d011682016040523d82523d6000602084013e610e16565b606091505b50915091508115610e445780848481518110610e3457610e34612b81565b6020026020010181905250610e4e565b3d6000803e3d6000fd5b5050600101610d98565b5092915050565b836001600160a01b0381163314610e7957610e7933611127565b610bfb85858585611d49565b60606000610e9283611d8d565b805190915015610ea25792915050565b6000610ead84611e4e565b905080610eb985611ff8565b604051602001610eca929190612bf5565b60405160208183030381529060405292505050919050565b6000610eec611a91565b8210610f2a5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016106b6565b600080516020612e8e833981519152805483908110610f4b57610f4b612b81565b90600052602060002001549050919050565b60606108f86120f9565b6000610f716110c7565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b610fac611aa7565b6001600160a01b0316336001600160a01b031614610fdd57604051632f7a8ee160e01b815260040160405180910390fd5b61092d81612127565b6000610ff0611aa7565b6001600160a01b0316336001600160a01b031614905090565b60006110136110c7565b54919050565b60008281527fd99b3a829832048f6be28ec488f80e0f5f986977f6b9d7f4b1ab0ac1e524c9ee60208190526040909120805461105490612a90565b1590506110955760405162461bcd60e51b815260206004820152600f60248201526e15549248185b1c9958591e481cd95d608a1b60448201526064016106b6565b60008381526020829052604090206108a08382612c6a565b610c30828260405180602001604052806000815250612130565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090565b60006110f56110c7565b54821080156107555750600160e01b61110c6110c7565b60008481526004919091016020526040902054161592915050565b6daaeb6d7670e522a718067333cd4e3b1561092d57604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015611194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b89190612d2a565b61092d57604051633b79c77360e21b81526001600160a01b03821660048201526024016106b6565b610c30828260016121a6565b60006111f7826119ec565b9050836001600160a01b0316816001600160a01b03161461122a5760405162a1148160e81b815260040160405180910390fd5b6000806112368461225b565b9150915061125b81876112463390565b6001600160a01b039081169116811491141790565b611286576112698633610f67565b61128657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166112ad57604051633a954ecd60e21b815260040160405180910390fd5b80156112b857600082555b6112c06110c7565b6001600160a01b03871660009081526005919091016020526040902080546000190190556112ec6110c7565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b176113236110c7565b60008681526004919091016020526040812091909155600160e11b8416900361139957600184016113526110c7565b600082815260049190910160205260408120549003611397576113736110c7565b54811461139757836113836110c7565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b0316600080516020612eae83398151915260405160405180910390a45b505050505050565b60008181527f20211f9d4ae667a819d1f429099f8aeebe331e6fa4cf5eff02d28f6060b7d6e8602090815260408083208151808301909252546001600160a01b038116808352600160a01b90910461ffff16928201929092528291600080516020612e6e83398151915291901561144e5780516020820151611467565b81546001600160a01b03811690600160a01b900461ffff165b935093505050915091565b61085783838360405180602001604052806000815250610e5f565b6000611498836119ec565b9050806000806114a78661225b565b9150915084156114e7576114bc818433611246565b6114e7576114ca8333610f67565b6114e757604051632ce44b5f60e11b815260040160405180910390fd5b80156114f257600082555b6fffffffffffffffffffffffffffffffff61150b6110c7565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b17600360e01b176115446110c7565b60008881526004919091016020526040812091909155600160e11b851690036115ba57600186016115736110c7565b6000828152600491909101602052604081205490036115b8576115946110c7565b5481146115b857846115a46110c7565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b03861690600080516020612eae833981519152908390a46115e86110c7565b600190810180549091019055505050505050565b6000806116098486612d47565b600080516020612e8e83398151915280546001810182557f1ced185bbf9482d38b4865a74eda9abbaa19023b28195b15e6e70dbf9d8ee7e70182905560008281527f09b74f8b9562e7c2d8089de59107ad15ceff2ad41fceff9c15cfd0131840330b60205260409020919350839250906116838582612c6a565b5050935093915050565b600080516020612ece83398151915254610100900460ff166116c15760405162461bcd60e51b81526004016106b690612d5a565b610c308282612283565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6127108111156117895760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016106b6565b6000600080516020612e6e83398151915280546001600160a01b0385166001600160b01b03199091168117600160a01b61ffff861602178255604051848152919250907f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a2505050565b6daaeb6d7670e522a718067333cd4e3b15610c305760405163c3c5a54760e01b81523060048201526daaeb6d7670e522a718067333cd4e9063c3c5a547906024016020604051808303816000875af115801561185e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118829190612d2a565b610c305780156118f657604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b1580156118e257600080fd5b505af11580156113c9573d6000803e3d6000fd5b6001600160a01b038216156119455760405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af2903906044016118c8565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e486906024016118c8565b6001600160e01b031980831690036119a15760405163b0a19dd560e01b815260040160405180910390fd5b6001600160e01b03199190911660009081527ffc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d860205260409020805460ff1916911515919091179055565b60006119f66110c7565b600083815260049190910160205260408120549150600160e01b82169003611a785780600003611a7357611a286110c7565b548210611a4857604051636f96cda160e11b815260040160405180910390fd5b611a506110c7565b600019909201600081815260049390930160205260409092205490508015611a48575b919050565b604051636f96cda160e11b815260040160405180910390fd5b6000600080516020612e8e833981519152611013565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f377d51b8f3c321ac06c08d08eb5924030a0062cf68630d0ace73345d5f49f6fd80546000908290611b0690612a90565b80601f0160208091040260200160405190810160405280929190818152602001828054611b3290612a90565b8015611b7f5780601f10611b5457610100808354040283529160200191611b7f565b820191906000526020600020905b815481529060010190602001808311611b6257829003601f168201915b5050505050905082826000019081611b979190612c6a565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168184604051610a4e929190612dae565b612710811115611c0d5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016106b6565b6040805180820182526001600160a01b0384811680835261ffff858116602080860191825260008a81527f20211f9d4ae667a819d1f429099f8aeebe331e6fa4cf5eff02d28f6060b7d6e88252879020955186549251909316600160a01b026001600160b01b031990921692909416919091171790925582518481529251600080516020612e6e8339815191529387927f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d92918290030190a350505050565b80611cd56110c7565b336000818152600792909201602090815260408084206001600160a01b03881680865290835293819020805460ff19169515159590951790945592518415158152919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611d5484848461087b565b6001600160a01b0383163b156108a057611d70848484846122f6565b6108a0576040516368d2bf6b60e11b815260040160405180910390fd5b60008181527fd99b3a829832048f6be28ec488f80e0f5f986977f6b9d7f4b1ab0ac1e524c9ee60205260409020805460609190611dc990612a90565b80601f0160208091040260200160405190810160405280929190818152602001828054611df590612a90565b8015611e425780601f10611e1757610100808354040283529160200191611e42565b820191906000526020600020905b815481529060010190602001808311611e2557829003601f168201915b50505050509050919050565b6060600080516020612e8e8339815191526000611e69611a91565b825460408051602080840282018101909252828152929350600092918591830182828015611eb657602002820191906000526020600020905b815481526020019060010190808311611ea2575b5050505050905060005b82811015611fbd57818181518110611eda57611eda612b81565b6020026020010151861015611fab57836001016000838381518110611f0157611f01612b81565b602002602001015181526020019081526020016000208054611f2290612a90565b80601f0160208091040260200160405190810160405280929190818152602001828054611f4e90612a90565b8015611f9b5780601f10611f7057610100808354040283529160200191611f9b565b820191906000526020600020905b815481529060010190602001808311611f7e57829003601f168201915b5050505050945050505050919050565b611fb6600182612d47565b9050611ec0565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b60448201526064016106b6565b60608160000361201f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612049578061203381612dd3565b91506120429050600a83612b15565b9150612023565b60008167ffffffffffffffff8111156120645761206461250f565b6040519080825280601f01601f19166020018201604052801561208e576020820181803683370190505b5090505b8415610987576120a3600183612dec565b91506120b0600a86612dff565b6120bb906030612d47565b60f81b8183815181106120d0576120d0612b81565b60200101906001600160f81b031916908160001a9053506120f2600a86612b15565b9450612092565b60607f377d51b8f3c321ac06c08d08eb5924030a0062cf68630d0ace73345d5f49f6fd805461077390612a90565b61092d816116cb565b61213a83836123e1565b6001600160a01b0383163b156108575760006121546110c7565b5490508281035b61216e60008683806001019450866122f6565b61218b576040516368d2bf6b60e11b815260040160405180910390fd5b81811061215b578161219b6110c7565b5414610bfb57600080fd5b60006121b183610c34565b905081156121f057336001600160a01b038216146121f0576121d38133610f67565b6121f0576040516367d9dca160e11b815260040160405180910390fd5b836121f96110c7565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b60008060006122686110c7565b60009485526006016020525050604090912080549092909150565b600080516020612ece83398151915254610100900460ff166122b75760405162461bcd60e51b81526004016106b690612d5a565b816122c06110c7565b600201906122ce9082612c6a565b50806122d86110c7565b600301906122e69082612c6a565b5060006122f16110c7565b555050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061232b903390899088908890600401612e13565b6020604051808303816000875af1925050508015612366575060408051601f3d908101601f1916820190925261236391810190612e50565b60015b6123c4573d808015612394576040519150601f19603f3d011682016040523d82523d6000602084013e612399565b606091505b5080516000036123bc576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60006123eb6110c7565b54905060008290036124105760405163b562e8dd60e01b815260040160405180910390fd5b6801000000000000000182026124246110c7565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b171761245f6110c7565b600083815260049190910160205260408120919091556001600160a01b038416908383019083908390600080516020612eae8339815191528180a4600183015b8181146124c55780836000600080516020612eae833981519152600080a460010161249f565b50816000036124e657604051622e076360e81b815260040160405180910390fd5b806124ef6110c7565b55506108579050565b80356001600160a01b0381168114611a7357600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156125405761254061250f565b604051601f8501601f19908116603f011681019082821181831017156125685761256861250f565b8160405280935085815286868601111561258157600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126125ac57600080fd5b6125bb83833560208501612525565b9392505050565b600080604083850312156125d557600080fd5b6125de836124f8565b9150602083013567ffffffffffffffff8111156125fa57600080fd5b6126068582860161259b565b9150509250929050565b6001600160e01b03198116811461092d57600080fd5b60006020828403121561263857600080fd5b81356125bb81612610565b60005b8381101561265e578181015183820152602001612646565b50506000910152565b6000815180845261267f816020860160208601612643565b601f01601f19169290920160200192915050565b6020815260006125bb6020830184612667565b6000602082840312156126b857600080fd5b5035919050565b600080604083850312156126d257600080fd5b6126db836124f8565b946020939093013593505050565b6000806000606084860312156126fe57600080fd5b612707846124f8565b9250612715602085016124f8565b9150604084013590509250925092565b6000806040838503121561273857600080fd5b50508035926020909101359150565b60008060006060848603121561275c57600080fd5b612765846124f8565b925060208401359150604084013567ffffffffffffffff81111561278857600080fd5b6127948682870161259b565b9150509250925092565b600080600080608085870312156127b457600080fd5b843567ffffffffffffffff808211156127cc57600080fd5b6127d88883890161259b565b955060208701359150808211156127ee57600080fd5b506127fb8782880161259b565b93505061280a604086016124f8565b9150606085013561ffff8116811461282157600080fd5b939692955090935050565b60006020828403121561283e57600080fd5b6125bb826124f8565b60006020828403121561285957600080fd5b813567ffffffffffffffff81111561287057600080fd5b6109878482850161259b565b60008060006060848603121561289157600080fd5b83359250612715602085016124f8565b801515811461092d57600080fd5b600080604083850312156128c257600080fd5b6128cb836124f8565b915060208301356128db816128a1565b809150509250929050565b600080602083850312156128f957600080fd5b823567ffffffffffffffff8082111561291157600080fd5b818501915085601f83011261292557600080fd5b81358181111561293457600080fd5b8660208260051b850101111561294957600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156129b057603f1988860301845261299e858351612667565b94509285019290850190600101612982565b5092979650505050505050565b600080600080608085870312156129d357600080fd5b6129dc856124f8565b93506129ea602086016124f8565b925060408501359150606085013567ffffffffffffffff811115612a0d57600080fd5b8501601f81018713612a1e57600080fd5b612a2d87823560208401612525565b91505092959194509250565b60008060408385031215612a4c57600080fd5b612a55836124f8565b9150612a63602084016124f8565b90509250929050565b6001600160a01b038316815260406020820181905260009061098790830184612667565b600181811c90821680612aa457607f821691505b602082108103612ac457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612afa57612afa612aca565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612b2457612b24612aff565b500490565b60018060a01b0384168152826020820152606060408201526000612b506060830184612667565b95945050505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112612bae57600080fd5b83018035915067ffffffffffffffff821115612bc957600080fd5b602001915036819003821315612bde57600080fd5b9250929050565b8183823760009101908152919050565b60008351612c07818460208801612643565b835190830190612c1b818360208801612643565b01949350505050565b601f82111561085757600081815260208120601f850160051c81016020861015612c4b5750805b601f850160051c820191505b818110156113c957828155600101612c57565b815167ffffffffffffffff811115612c8457612c8461250f565b612c9881612c928454612a90565b84612c24565b602080601f831160018114612ccd5760008415612cb55750858301515b600019600386901b1c1916600185901b1785556113c9565b600085815260208120601f198616915b82811015612cfc57888601518255948401946001909101908401612cdd565b5085821015612d1a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215612d3c57600080fd5b81516125bb816128a1565b8082018082111561075557610755612aca565b60208082526034908201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604082015273206973206e6f7420696e697469616c697a696e6760601b606082015260800190565b604081526000612dc16040830185612667565b8281036020840152612b508185612667565b600060018201612de557612de5612aca565b5060010190565b8181038181111561075557610755612aca565b600082612e0e57612e0e612aff565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612e4690830184612667565b9695505050505050565b600060208284031215612e6257600080fd5b81516125bb8161261056fe20211f9d4ae667a819d1f429099f8aeebe331e6fa4cf5eff02d28f6060b7d6e709b74f8b9562e7c2d8089de59107ad15ceff2ad41fceff9c15cfd0131840330addf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efee151c8401928dc223602bb187aff91b9a56c7cae5476ef1b3287b085a16c85fa2646970667358221220726f2c0c4c8507c9057906db38b381e7e7c8652fbade4f11ac25e2af7be85b0964736f6c63430008100033",
    "sourceMap": "1085:7684:92:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101f85760003560e01c8063600dd5ea1161010d578063a22cb465116100a0578063c87b56dd1161006f578063c87b56dd146105d7578063d28ce35e146105f7578063e8a3d48514610617578063e985e9c51461062c578063f2fde38b1461064c57600080fd5b8063a22cb4651461053f578063ac9650d81461055f578063b24f2d391461058c578063b88d4fde146105c457600080fd5b80638da5cb5b116100dc5780638da5cb5b146104d5578063938e3d7b146104ea57806395d89b411461050a5780639bcf7a151461051f57600080fd5b8063600dd5ea146104605780636352211e1461048057806363b45e2d146104a057806370a08231146104b557600080fd5b80632a55205a11610190578063430c20811161015f578063430c20811461039e5780634cc157df146103be5780634f558e79146104005780635003c7c3146104205780635881bfc11461044057600080fd5b80632a55205a146103175780633b1475a71461035657806342842e0e1461036b57806342966c681461037e57600080fd5b8063095ea7b3116101cc578063095ea7b3146102ae57806318160ddd146102c157806323b872dd146102e45780632419f51b146102f757600080fd5b806275a317146101fd57806301ffc9a71461021f57806306fdde0314610254578063081812fc14610276575b600080fd5b34801561020957600080fd5b5061021d6102183660046125c2565b61066c565b005b34801561022b57600080fd5b5061023f61023a366004612626565b610718565b60405190151581526020015b60405180910390f35b34801561026057600080fd5b5061026961075b565b60405161024b9190612693565b34801561028257600080fd5b506102966102913660046126a6565b6107f6565b6040516001600160a01b03909116815260200161024b565b61021d6102bc3660046126bf565b610843565b3480156102cd57600080fd5b506102d661085c565b60405190815260200161024b565b61021d6102f23660046126e9565b61087b565b34801561030357600080fd5b506102d66103123660046126a6565b6108a6565b34801561032357600080fd5b50610337610332366004612725565b6108b1565b604080516001600160a01b03909316835260208301919091520161024b565b34801561036257600080fd5b506102d66108ee565b61021d6103793660046126e9565b6108fd565b34801561038a57600080fd5b5061021d6103993660046126a6565b610922565b3480156103aa57600080fd5b5061023f6103b93660046126bf565b610930565b3480156103ca57600080fd5b506103de6103d93660046126a6565b61098f565b604080516001600160a01b03909316835261ffff90911660208301520161024b565b34801561040c57600080fd5b5061023f61041b3660046126a6565b6109a4565b34801561042c57600080fd5b5061021d61043b366004612747565b6109af565b34801561044c57600080fd5b5061021d61045b36600461279e565b610a5b565b34801561046c57600080fd5b5061021d61047b3660046126bf565b610c02565b34801561048c57600080fd5b5061029661049b3660046126a6565b610c34565b3480156104ac57600080fd5b506102d6610c3f565b3480156104c157600080fd5b506102d66104d036600461282c565b610c49565b3480156104e157600080fd5b50610296610cb2565b3480156104f657600080fd5b5061021d610505366004612847565b610cbc565b34801561051657600080fd5b50610269610ce9565b34801561052b57600080fd5b5061021d61053a36600461287c565b610d01565b34801561054b57600080fd5b5061021d61055a3660046128af565b610d30565b34801561056b57600080fd5b5061057f61057a3660046128e6565b610d44565b60405161024b919061295b565b34801561059857600080fd5b50600080516020612e6e833981519152546001600160a01b03811690600160a01b900461ffff166103de565b61021d6105d23660046129bd565b610e5f565b3480156105e357600080fd5b506102696105f23660046126a6565b610e85565b34801561060357600080fd5b506102d66106123660046126a6565b610ee2565b34801561062357600080fd5b50610269610f5d565b34801561063857600080fd5b5061023f610647366004612a39565b610f67565b34801561065857600080fd5b5061021d61066736600461282c565b610fa4565b610674610fe6565b6106bf5760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b60448201526064015b60405180910390fd5b6106d06106ca611009565b82611019565b6106db8260016110ad565b7f0c1b180fbb60448c5491c5ddc7c3a923854214b9ff70f90a7821333338971f92828260405161070c929190612a6c565b60405180910390a15050565b6001600160e01b0319811660009081527ffc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d8602052604081205460ff165b92915050565b60606107656110c7565b600201805461077390612a90565b80601f016020809104026020016040519081016040528092919081815260200182805461079f90612a90565b80156107ec5780601f106107c1576101008083540402835291602001916107ec565b820191906000526020600020905b8154815290600101906020018083116107cf57829003601f168201915b5050505050905090565b6000610801826110eb565b61081e576040516333d1c03960e21b815260040160405180910390fd5b6108266110c7565b60009283526006016020525060409020546001600160a01b031690565b8161084d81611127565b61085783836111e0565b505050565b6000806108676110c7565b600101546108736110c7565b540303919050565b826001600160a01b03811633146108955761089533611127565b6108a08484846111ec565b50505050565b600061075582610ee2565b6000806000806108c0866113d1565b90945084925061ffff1690506127106108d98287612ae0565b6108e39190612b15565b925050509250929050565b60006108f8611009565b905090565b826001600160a01b03811633146109175761091733611127565b6108a0848484611472565b61092d81600161148d565b50565b60008061093c83610c34565b9050806001600160a01b0316846001600160a01b0316148061096357506109638185610f67565b806109875750836001600160a01b031661097c846107f6565b6001600160a01b0316145b949350505050565b60008061099b836113d1565b91509150915091565b6000610755826110eb565b6109b7610fe6565b6109fd5760405162461bcd60e51b81526020600482015260176024820152762737ba1030baba3437b934bd32b2103a379036b4b73a1760491b60448201526064016106b6565b610a0f610a08611009565b83836115fc565b5050610a1b83836110ad565b7f5443e3e7d8342ad07aca2b5d0e1679e55e0fb2c09df232251ce9acbb22c75465838383604051610a4e93929190612b29565b60405180910390a1505050565b600080516020612ece83398151915254610100900460ff16610a9057600080516020612ece8339815191525460ff1615610a94565b303b155b610b065760405162461bcd60e51b815260206004820152603760248201527f455243373231415f5f496e697469616c697a61626c653a20636f6e747261637460448201527f20697320616c726561647920696e697469616c697a656400000000000000000060648201526084016106b6565b600080516020612ece83398151915254610100900460ff16158015610b4257600080516020612ece833981519152805461ffff19166101011790555b610b4c858561168d565b610b55336116cb565b610b63838361ffff16611745565b610b82733cc6cdda760b79bafa08df41ecfa224f810dceb660016117fe565b610b946301ffc9a760e01b6001611976565b610ba66380ac58cd60e01b6001611976565b610bb8635b5e139f60e01b6001611976565b610bca63152a902d60e11b6001611976565b610bdc633d96f4ff60e11b6001611976565b8015610bfb57600080516020612ece833981519152805461ff00191690555b5050505050565b610c0a610fe6565b610c265760405162461bcd60e51b81526004016106b690612b59565b610c308282611745565b5050565b6000610755826119ec565b60006108f8611a91565b60006001600160a01b038216610c72576040516323d3ad8160e21b815260040160405180910390fd5b67ffffffffffffffff610c836110c7565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b60006108f8611aa7565b610cc4610fe6565b610ce05760405162461bcd60e51b81526004016106b690612b59565b61092d81611ad5565b6060610cf36110c7565b600301805461077390612a90565b610d09610fe6565b610d255760405162461bcd60e51b81526004016106b690612b59565b610857838383611bc9565b81610d3a81611127565b6108578383611ccc565b60608167ffffffffffffffff811115610d5f57610d5f61250f565b604051908082528060200260200182016040528015610d9257816020015b6060815260200190600190039081610d7d5790505b50905060005b82811015610e585760008030868685818110610db657610db6612b81565b9050602002810190610dc89190612b97565b604051610dd6929190612be5565b600060405180830381855af49150503d8060008114610e11576040519150601f19603f3d011682016040523d82523d6000602084013e610e16565b606091505b50915091508115610e445780848481518110610e3457610e34612b81565b6020026020010181905250610e4e565b3d6000803e3d6000fd5b5050600101610d98565b5092915050565b836001600160a01b0381163314610e7957610e7933611127565b610bfb85858585611d49565b60606000610e9283611d8d565b805190915015610ea25792915050565b6000610ead84611e4e565b905080610eb985611ff8565b604051602001610eca929190612bf5565b60405160208183030381529060405292505050919050565b6000610eec611a91565b8210610f2a5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016106b6565b600080516020612e8e833981519152805483908110610f4b57610f4b612b81565b90600052602060002001549050919050565b60606108f86120f9565b6000610f716110c7565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b610fac611aa7565b6001600160a01b0316336001600160a01b031614610fdd57604051632f7a8ee160e01b815260040160405180910390fd5b61092d81612127565b6000610ff0611aa7565b6001600160a01b0316336001600160a01b031614905090565b60006110136110c7565b54919050565b60008281527fd99b3a829832048f6be28ec488f80e0f5f986977f6b9d7f4b1ab0ac1e524c9ee60208190526040909120805461105490612a90565b1590506110955760405162461bcd60e51b815260206004820152600f60248201526e15549248185b1c9958591e481cd95d608a1b60448201526064016106b6565b60008381526020829052604090206108a08382612c6a565b610c30828260405180602001604052806000815250612130565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090565b60006110f56110c7565b54821080156107555750600160e01b61110c6110c7565b60008481526004919091016020526040902054161592915050565b6daaeb6d7670e522a718067333cd4e3b1561092d57604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015611194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b89190612d2a565b61092d57604051633b79c77360e21b81526001600160a01b03821660048201526024016106b6565b610c30828260016121a6565b60006111f7826119ec565b9050836001600160a01b0316816001600160a01b03161461122a5760405162a1148160e81b815260040160405180910390fd5b6000806112368461225b565b9150915061125b81876112463390565b6001600160a01b039081169116811491141790565b611286576112698633610f67565b61128657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166112ad57604051633a954ecd60e21b815260040160405180910390fd5b80156112b857600082555b6112c06110c7565b6001600160a01b03871660009081526005919091016020526040902080546000190190556112ec6110c7565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b176113236110c7565b60008681526004919091016020526040812091909155600160e11b8416900361139957600184016113526110c7565b600082815260049190910160205260408120549003611397576113736110c7565b54811461139757836113836110c7565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b0316600080516020612eae83398151915260405160405180910390a45b505050505050565b60008181527f20211f9d4ae667a819d1f429099f8aeebe331e6fa4cf5eff02d28f6060b7d6e8602090815260408083208151808301909252546001600160a01b038116808352600160a01b90910461ffff16928201929092528291600080516020612e6e83398151915291901561144e5780516020820151611467565b81546001600160a01b03811690600160a01b900461ffff165b935093505050915091565b61085783838360405180602001604052806000815250610e5f565b6000611498836119ec565b9050806000806114a78661225b565b9150915084156114e7576114bc818433611246565b6114e7576114ca8333610f67565b6114e757604051632ce44b5f60e11b815260040160405180910390fd5b80156114f257600082555b6fffffffffffffffffffffffffffffffff61150b6110c7565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b17600360e01b176115446110c7565b60008881526004919091016020526040812091909155600160e11b851690036115ba57600186016115736110c7565b6000828152600491909101602052604081205490036115b8576115946110c7565b5481146115b857846115a46110c7565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b03861690600080516020612eae833981519152908390a46115e86110c7565b600190810180549091019055505050505050565b6000806116098486612d47565b600080516020612e8e83398151915280546001810182557f1ced185bbf9482d38b4865a74eda9abbaa19023b28195b15e6e70dbf9d8ee7e70182905560008281527f09b74f8b9562e7c2d8089de59107ad15ceff2ad41fceff9c15cfd0131840330b60205260409020919350839250906116838582612c6a565b5050935093915050565b600080516020612ece83398151915254610100900460ff166116c15760405162461bcd60e51b81526004016106b690612d5a565b610c308282612283565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6127108111156117895760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016106b6565b6000600080516020612e6e83398151915280546001600160a01b0385166001600160b01b03199091168117600160a01b61ffff861602178255604051848152919250907f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a2505050565b6daaeb6d7670e522a718067333cd4e3b15610c305760405163c3c5a54760e01b81523060048201526daaeb6d7670e522a718067333cd4e9063c3c5a547906024016020604051808303816000875af115801561185e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118829190612d2a565b610c305780156118f657604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b1580156118e257600080fd5b505af11580156113c9573d6000803e3d6000fd5b6001600160a01b038216156119455760405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af2903906044016118c8565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e486906024016118c8565b6001600160e01b031980831690036119a15760405163b0a19dd560e01b815260040160405180910390fd5b6001600160e01b03199190911660009081527ffc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d860205260409020805460ff1916911515919091179055565b60006119f66110c7565b600083815260049190910160205260408120549150600160e01b82169003611a785780600003611a7357611a286110c7565b548210611a4857604051636f96cda160e11b815260040160405180910390fd5b611a506110c7565b600019909201600081815260049390930160205260409092205490508015611a48575b919050565b604051636f96cda160e11b815260040160405180910390fd5b6000600080516020612e8e833981519152611013565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b7f377d51b8f3c321ac06c08d08eb5924030a0062cf68630d0ace73345d5f49f6fd80546000908290611b0690612a90565b80601f0160208091040260200160405190810160405280929190818152602001828054611b3290612a90565b8015611b7f5780601f10611b5457610100808354040283529160200191611b7f565b820191906000526020600020905b815481529060010190602001808311611b6257829003601f168201915b5050505050905082826000019081611b979190612c6a565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168184604051610a4e929190612dae565b612710811115611c0d5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016106b6565b6040805180820182526001600160a01b0384811680835261ffff858116602080860191825260008a81527f20211f9d4ae667a819d1f429099f8aeebe331e6fa4cf5eff02d28f6060b7d6e88252879020955186549251909316600160a01b026001600160b01b031990921692909416919091171790925582518481529251600080516020612e6e8339815191529387927f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d92918290030190a350505050565b80611cd56110c7565b336000818152600792909201602090815260408084206001600160a01b03881680865290835293819020805460ff19169515159590951790945592518415158152919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611d5484848461087b565b6001600160a01b0383163b156108a057611d70848484846122f6565b6108a0576040516368d2bf6b60e11b815260040160405180910390fd5b60008181527fd99b3a829832048f6be28ec488f80e0f5f986977f6b9d7f4b1ab0ac1e524c9ee60205260409020805460609190611dc990612a90565b80601f0160208091040260200160405190810160405280929190818152602001828054611df590612a90565b8015611e425780601f10611e1757610100808354040283529160200191611e42565b820191906000526020600020905b815481529060010190602001808311611e2557829003601f168201915b50505050509050919050565b6060600080516020612e8e8339815191526000611e69611a91565b825460408051602080840282018101909252828152929350600092918591830182828015611eb657602002820191906000526020600020905b815481526020019060010190808311611ea2575b5050505050905060005b82811015611fbd57818181518110611eda57611eda612b81565b6020026020010151861015611fab57836001016000838381518110611f0157611f01612b81565b602002602001015181526020019081526020016000208054611f2290612a90565b80601f0160208091040260200160405190810160405280929190818152602001828054611f4e90612a90565b8015611f9b5780601f10611f7057610100808354040283529160200191611f9b565b820191906000526020600020905b815481529060010190602001808311611f7e57829003601f168201915b5050505050945050505050919050565b611fb6600182612d47565b9050611ec0565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b60448201526064016106b6565b60608160000361201f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612049578061203381612dd3565b91506120429050600a83612b15565b9150612023565b60008167ffffffffffffffff8111156120645761206461250f565b6040519080825280601f01601f19166020018201604052801561208e576020820181803683370190505b5090505b8415610987576120a3600183612dec565b91506120b0600a86612dff565b6120bb906030612d47565b60f81b8183815181106120d0576120d0612b81565b60200101906001600160f81b031916908160001a9053506120f2600a86612b15565b9450612092565b60607f377d51b8f3c321ac06c08d08eb5924030a0062cf68630d0ace73345d5f49f6fd805461077390612a90565b61092d816116cb565b61213a83836123e1565b6001600160a01b0383163b156108575760006121546110c7565b5490508281035b61216e60008683806001019450866122f6565b61218b576040516368d2bf6b60e11b815260040160405180910390fd5b81811061215b578161219b6110c7565b5414610bfb57600080fd5b60006121b183610c34565b905081156121f057336001600160a01b038216146121f0576121d38133610f67565b6121f0576040516367d9dca160e11b815260040160405180910390fd5b836121f96110c7565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b60008060006122686110c7565b60009485526006016020525050604090912080549092909150565b600080516020612ece83398151915254610100900460ff166122b75760405162461bcd60e51b81526004016106b690612d5a565b816122c06110c7565b600201906122ce9082612c6a565b50806122d86110c7565b600301906122e69082612c6a565b5060006122f16110c7565b555050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061232b903390899088908890600401612e13565b6020604051808303816000875af1925050508015612366575060408051601f3d908101601f1916820190925261236391810190612e50565b60015b6123c4573d808015612394576040519150601f19603f3d011682016040523d82523d6000602084013e612399565b606091505b5080516000036123bc576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60006123eb6110c7565b54905060008290036124105760405163b562e8dd60e01b815260040160405180910390fd5b6801000000000000000182026124246110c7565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b171761245f6110c7565b600083815260049190910160205260408120919091556001600160a01b038416908383019083908390600080516020612eae8339815191528180a4600183015b8181146124c55780836000600080516020612eae833981519152600080a460010161249f565b50816000036124e657604051622e076360e81b815260040160405180910390fd5b806124ef6110c7565b55506108579050565b80356001600160a01b0381168114611a7357600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156125405761254061250f565b604051601f8501601f19908116603f011681019082821181831017156125685761256861250f565b8160405280935085815286868601111561258157600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126125ac57600080fd5b6125bb83833560208501612525565b9392505050565b600080604083850312156125d557600080fd5b6125de836124f8565b9150602083013567ffffffffffffffff8111156125fa57600080fd5b6126068582860161259b565b9150509250929050565b6001600160e01b03198116811461092d57600080fd5b60006020828403121561263857600080fd5b81356125bb81612610565b60005b8381101561265e578181015183820152602001612646565b50506000910152565b6000815180845261267f816020860160208601612643565b601f01601f19169290920160200192915050565b6020815260006125bb6020830184612667565b6000602082840312156126b857600080fd5b5035919050565b600080604083850312156126d257600080fd5b6126db836124f8565b946020939093013593505050565b6000806000606084860312156126fe57600080fd5b612707846124f8565b9250612715602085016124f8565b9150604084013590509250925092565b6000806040838503121561273857600080fd5b50508035926020909101359150565b60008060006060848603121561275c57600080fd5b612765846124f8565b925060208401359150604084013567ffffffffffffffff81111561278857600080fd5b6127948682870161259b565b9150509250925092565b600080600080608085870312156127b457600080fd5b843567ffffffffffffffff808211156127cc57600080fd5b6127d88883890161259b565b955060208701359150808211156127ee57600080fd5b506127fb8782880161259b565b93505061280a604086016124f8565b9150606085013561ffff8116811461282157600080fd5b939692955090935050565b60006020828403121561283e57600080fd5b6125bb826124f8565b60006020828403121561285957600080fd5b813567ffffffffffffffff81111561287057600080fd5b6109878482850161259b565b60008060006060848603121561289157600080fd5b83359250612715602085016124f8565b801515811461092d57600080fd5b600080604083850312156128c257600080fd5b6128cb836124f8565b915060208301356128db816128a1565b809150509250929050565b600080602083850312156128f957600080fd5b823567ffffffffffffffff8082111561291157600080fd5b818501915085601f83011261292557600080fd5b81358181111561293457600080fd5b8660208260051b850101111561294957600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156129b057603f1988860301845261299e858351612667565b94509285019290850190600101612982565b5092979650505050505050565b600080600080608085870312156129d357600080fd5b6129dc856124f8565b93506129ea602086016124f8565b925060408501359150606085013567ffffffffffffffff811115612a0d57600080fd5b8501601f81018713612a1e57600080fd5b612a2d87823560208401612525565b91505092959194509250565b60008060408385031215612a4c57600080fd5b612a55836124f8565b9150612a63602084016124f8565b90509250929050565b6001600160a01b038316815260406020820181905260009061098790830184612667565b600181811c90821680612aa457607f821691505b602082108103612ac457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612afa57612afa612aca565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612b2457612b24612aff565b500490565b60018060a01b0384168152826020820152606060408201526000612b506060830184612667565b95945050505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112612bae57600080fd5b83018035915067ffffffffffffffff821115612bc957600080fd5b602001915036819003821315612bde57600080fd5b9250929050565b8183823760009101908152919050565b60008351612c07818460208801612643565b835190830190612c1b818360208801612643565b01949350505050565b601f82111561085757600081815260208120601f850160051c81016020861015612c4b5750805b601f850160051c820191505b818110156113c957828155600101612c57565b815167ffffffffffffffff811115612c8457612c8461250f565b612c9881612c928454612a90565b84612c24565b602080601f831160018114612ccd5760008415612cb55750858301515b600019600386901b1c1916600185901b1785556113c9565b600085815260208120601f198616915b82811015612cfc57888601518255948401946001909101908401612cdd565b5085821015612d1a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215612d3c57600080fd5b81516125bb816128a1565b8082018082111561075557610755612aca565b60208082526034908201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604082015273206973206e6f7420696e697469616c697a696e6760601b606082015260800190565b604081526000612dc16040830185612667565b8281036020840152612b508185612667565b600060018201612de557612de5612aca565b5060010190565b8181038181111561075557610755612aca565b600082612e0e57612e0e612aff565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612e4690830184612667565b9695505050505050565b600060208284031215612e6257600080fd5b81516125bb8161261056fe20211f9d4ae667a819d1f429099f8aeebe331e6fa4cf5eff02d28f6060b7d6e709b74f8b9562e7c2d8089de59107ad15ceff2ad41fceff9c15cfd0131840330addf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efee151c8401928dc223602bb187aff91b9a56c7cae5476ef1b3287b085a16c85fa2646970667358221220726f2c0c4c8507c9057906db38b381e7e7c8652fbade4f11ac25e2af7be85b0964736f6c63430008100033",
    "sourceMap": "1085:7684:92:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4006:247;;;;;;;;;;-1:-1:-1;4006:247:92;;;;;:::i;:::-;;:::i;:::-;;2422:167;;;;;;;;;;-1:-1:-1;2422:167:92;;;;;:::i;:::-;;:::i;:::-;;;2140:14:117;;2133:22;2115:41;;2103:2;2088:18;2422:167:92;;;;;;;;9325:122:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;15756:238::-;;;;;;;;;;-1:-1:-1;15756:238:1;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3272:32:117;;;3254:51;;3242:2;3227:18;15756:238:1;3108:203:117;6863:219:92;;;;;;:::i;:::-;;:::i;4916:365:1:-;;;;;;;;;;;;;:::i;:::-;;;3721:25:117;;;3709:2;3694:18;4916:365:1;3575:177:117;7129:225:92;;;;;;:::i;:::-;;:::i;1404:125:94:-;;;;;;;;;;-1:-1:-1;1404:125:94;;;;;:::i;:::-;;:::i;1583:331:110:-;;;;;;;;;;-1:-1:-1;1583:331:110;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4535:32:117;;;4517:51;;4599:2;4584:18;;4577:34;;;;4490:18;1583:331:110;4343:274:117;5639:105:92;;;;;;;;;;;;;:::i;7405:233::-;;;;;;:::i;:::-;;:::i;5297:87::-;;;;;;;;;;-1:-1:-1;5297:87:92;;;;;:::i;:::-;;:::i;5844:345::-;;;;;;;;;;-1:-1:-1;5844:345:92;;;;;:::i;:::-;;:::i;2154:147:110:-;;;;;;;;;;-1:-1:-1;2154:147:110;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4812:32:117;;;4794:51;;4893:6;4881:19;;;4876:2;4861:18;;4854:47;4767:18;2154:147:110;4622:285:117;6260:107:92;;;;;;;;;;-1:-1:-1;6260:107:92;;;;;:::i;:::-;;:::i;4714:308::-;;;;;;;;;;-1:-1:-1;4714:308:92;;;;;:::i;:::-;;:::i;1411:730::-;;;;;;;;;;-1:-1:-1;1411:730:92;;;;;:::i;:::-;;:::i;2974:254:110:-;;;;;;;;;;-1:-1:-1;2974:254:110;;;;;:::i;:::-;;:::i;10725:150:1:-;;;;;;;;;;-1:-1:-1;10725:150:1;;;;;:::i;:::-;;:::i;1102:101:94:-;;;;;;;;;;;;;:::i;6163:254:1:-;;;;;;;;;;-1:-1:-1;6163:254:1;;;;;:::i;:::-;;:::i;378:87:24:-;;;;;;;;;;;;;:::i;1421:177:98:-;;;;;;;;;;-1:-1:-1;1421:177:98;;;;;:::i;:::-;;:::i;9518:126:1:-;;;;;;;;;;;;;:::i;3743:256:110:-;;;;;;;;;;-1:-1:-1;3743:256:110;;;;;:::i;:::-;;:::i;6600:222:92:-;;;;;;;;;;-1:-1:-1;6600:222:92;;;;;:::i;:::-;;:::i;312:675:62:-;;;;;;;;;;-1:-1:-1;312:675:62;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2411:121:110:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;876:18:111;-1:-1:-1;;;;;876:18:111;;;-1:-1:-1;;;903:12:111;;;;2411:121:110;;7689:258:92;;;;;;:::i;:::-;;:::i;3004:466::-;;;;;;;;;;-1:-1:-1;3004:466:92;;;;;:::i;:::-;;:::i;1356:239:95:-;;;;;;;;;;-1:-1:-1;1356:239:95;;;;;:::i;:::-;;:::i;919:99:98:-;;;;;;;;;;;;;:::i;16726:186:1:-;;;;;;;;;;-1:-1:-1;16726:186:1;;;;;:::i;:::-;;:::i;514:113:24:-;;;;;;;;;;-1:-1:-1;514:113:24;;;;;:::i;:::-;;:::i;4006:247:92:-;4093:10;:8;:10::i;:::-;4085:46;;;;-1:-1:-1;;;4085:46:92;;10028:2:117;4085:46:92;;;10010:21:117;10067:2;10047:18;;;10040:30;-1:-1:-1;;;10086:18:117;;;10079:53;10149:18;;4085:46:92;;;;;;;;;4141:40;4155:14;:12;:14::i;:::-;4171:9;4141:13;:40::i;:::-;4191:17;4201:3;4206:1;4191:9;:17::i;:::-;4224:22;4231:3;4236:9;4224:22;;;;;;;:::i;:::-;;;;;;;;4006:247;;:::o;2422:167::-;-1:-1:-1;;;;;;620:59:41;;2528:4:92;620:59:41;;;219:52:42;620:59:41;;;;;;;;2551:31:92;2544:38;2422:167;-1:-1:-1;;2422:167:92:o;9325:122:1:-;9379:13;9411:23;:21;:23::i;:::-;:29;;9404:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9325:122;:::o;15756:238::-;15832:7;15856:16;15864:7;15856;:16::i;:::-;15851:64;;15881:34;;-1:-1:-1;;;15881:34:1;;;;;;;;;;;15851:64;15933:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;15933:48:1;;;:54;-1:-1:-1;;;;;15933:54:1;;15756:238::o;6863:219:92:-;7019:8;2014:30:102;2035:8;2014:20;:30::i;:::-;7043:32:92::1;7057:8;7067:7;7043:13;:32::i;:::-;6863:219:::0;;;:::o;4916:365:1:-;4977:7;;5210:23;:21;:23::i;:::-;:36;;;5170:23;:21;:23::i;:::-;:37;:76;:94;;4916:365;-1:-1:-1;4916:365:1:o;7129:225:92:-;7290:4;-1:-1:-1;;;;;1750:18:102;;1758:10;1750:18;1746:81;;1784:32;1805:10;1784:20;:32::i;:::-;7310:37:92::1;7329:4;7335:2;7339:7;7310:18;:37::i;:::-;7129:225:::0;;;;:::o;1404:125:94:-;1470:7;1496:26;1515:6;1496:18;:26::i;1583:331:110:-;1703:16;1721:21;1759:17;1778:11;1793:32;1817:7;1793:23;:32::i;:::-;1758:67;;-1:-1:-1;1758:67:110;;-1:-1:-1;1758:67:110;;;-1:-1:-1;1901:6:110;1882:15;1758:67;1882:9;:15;:::i;:::-;1881:26;;;;:::i;:::-;1865:42;;1748:166;;1583:331;;;;;:::o;5639:105:92:-;5697:7;5723:14;:12;:14::i;:::-;5716:21;;5639:105;:::o;7405:233::-;7570:4;-1:-1:-1;;;;;1750:18:102;;1758:10;1750:18;1746:81;;1784:32;1805:10;1784:20;:32::i;:::-;7590:41:92::1;7613:4;7619:2;7623:7;7590:22;:41::i;5297:87::-:0;5356:21;5362:8;5372:4;5356:5;:21::i;:::-;5297:87;:::o;5844:345::-;5969:24;6009:13;6025:17;6033:8;6025:7;:17::i;:::-;6009:33;;6100:5;-1:-1:-1;;;;;6087:18:92;:9;-1:-1:-1;;;;;6087:18:92;;:56;;;;6109:34;6126:5;6133:9;6109:16;:34::i;:::-;6087:94;;;;6172:9;-1:-1:-1;;;;;6147:34:92;:21;6159:8;6147:11;:21::i;:::-;-1:-1:-1;;;;;6147:34:92;;6087:94;6052:130;5844:345;-1:-1:-1;;;;5844:345:92:o;2154:147:110:-;2227:7;2236:6;2261:33;2285:8;2261:23;:33::i;:::-;2254:40;;;;2154:147;;;:::o;6260:107:92:-;6320:4;6343:17;6351:8;6343:7;:17::i;4714:308::-;4824:10;:8;:10::i;:::-;4816:46;;;;-1:-1:-1;;;4816:46:92;;10028:2:117;4816:46:92;;;10010:21:117;10067:2;10047:18;;;10040:30;-1:-1:-1;;;10086:18:117;;;10079:53;10149:18;;4816:46:92;9826:347:117;4816:46:92;4872:55;4891:14;:12;:14::i;:::-;4907:9;4918:8;4872:18;:55::i;:::-;;;4937:25;4947:3;4952:9;4937;:25::i;:::-;4978:37;4990:3;4995:9;5006:8;4978:37;;;;;;;;:::i;:::-;;;;;;;;4714:308;;;:::o;1411:730::-;-1:-1:-1;;;;;;;;;;;1658:52:2;;;;;;:158;;-1:-1:-1;;;;;;;;;;;1765:51:2;;;1764:52;1658:158;;;3231:4;3295:17;3338:7;1729:16;1637:260;;;;-1:-1:-1;;;1637:260:2;;12042:2:117;1637:260:2;;;12024:21:117;12081:2;12061:18;;;12054:30;12120:34;12100:18;;;12093:62;12191:25;12171:18;;;12164:53;12234:19;;1637:260:2;11840:419:117;1637:260:2;-1:-1:-1;;;;;;;;;;;1931:52:2;;;;;;1930:53;1993:176;;;;-1:-1:-1;;;;;;;;;;;2027:59:2;;-1:-1:-1;;2100:58:2;;;;;1993:176;1578:30:92::1;1593:5;1600:7;1578:14;:30::i;:::-;1618:21;1628:10;1618:9;:21::i;:::-;1649:54;1672:17;1691:11;1649:54;;:22;:54::i;:::-;1713:62;327:42:103;1770:4:92;1713:34;:62::i;:::-;1786:54;-1:-1:-1::0;;;1835:4:92::1;1786:21;:54::i;:::-;1850;-1:-1:-1::0;;;1899:4:92::1;1850:21;:54::i;:::-;1914:39;-1:-1:-1::0;;;1948:4:92::1;1914:21;:39::i;:::-;2005:55;-1:-1:-1::0;;;2055:4:92::1;2005:21;:55::i;:::-;2070:64;-1:-1:-1::0;;;2129:4:92::1;2070:21;:64::i;:::-;2195:14:2::0;2191:105;;;-1:-1:-1;;;;;;;;;;;2225:60:2;;-1:-1:-1;;2225:60:2;;;2191:105;1356:946;1411:730:92;;;;:::o;2974:254:110:-;3086:20;:18;:20::i;:::-;3081:76;;3122:24;;-1:-1:-1;;;3122:24:110;;;;;;;:::i;3081:76::-;3167:54;3190:17;3209:11;3167:22;:54::i;:::-;2974:254;;:::o;10725:150:1:-;10797:7;10839:27;10858:7;10839:18;:27::i;1102:101:94:-;1152:7;1178:18;:16;:18::i;6163:254:1:-;6235:7;-1:-1:-1;;;;;6258:19:1;;6254:60;;6286:28;;-1:-1:-1;;;6286:28:1;;;;;;;;;;;6254:60;1428:13;6331:23;:21;:23::i;:::-;:42;;:49;6374:5;-1:-1:-1;;;;;6331:49:1;-1:-1:-1;;;;;6331:49:1;;;;;;;;;;;;;:79;6324:86;;6163:254;;;:::o;378:87:24:-;424:7;450:8;:6;:8::i;1421:177:98:-;1489:20;:18;:20::i;:::-;1484:76;;1525:24;;-1:-1:-1;;;1525:24:98;;;;;;;:::i;1484:76::-;1570:21;1586:4;1570:15;:21::i;9518:126:1:-;9574:13;9606:23;:21;:23::i;:::-;:31;;9599:38;;;;;:::i;3743:256:110:-;3860:20;:18;:20::i;:::-;3855:76;;3896:24;;-1:-1:-1;;;3896:24:110;;;;;;;:::i;3855:76::-;3941:51;3965:8;3975:10;3987:4;3941:23;:51::i;6600:222:92:-;6748:8;2014:30:102;2035:8;2014:20;:30::i;:::-;6772:43:92::1;6796:8;6806;6772:23;:43::i;312:675:62:-:0;386:22;442:4;430:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;420:34;;494:9;489:457;505:15;;;489:457;;;546:12;;595:4;635;;640:1;635:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;587:56;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;545:98;;;;666:7;662:270;;;710:10;697:7;705:1;697:10;;;;;;;;:::i;:::-;;;;;;:23;;;;662:270;;;823:16;820:1;;802:38;875:16;820:1;865:27;662:270;-1:-1:-1;;522:3:62;;489:457;;;;312:675;;;;:::o;7689:258:92:-;7873:4;-1:-1:-1;;;;;1750:18:102;;1758:10;1750:18;1746:81;;1784:32;1805:10;1784:20;:32::i;:::-;7893:47:92::1;7916:4;7922:2;7926:7;7935:4;7893:22;:47::i;3004:466::-:0;3078:13;3147:26;3176:22;3189:8;3176:12;:22::i;:::-;3212:26;;3147:51;;-1:-1:-1;3212:30:92;3208:80;;3265:12;3004:466;-1:-1:-1;;3004:466:92:o;3208:80::-;3347:22;3372:21;3384:8;3372:11;:21::i;:::-;3347:46;;3424:8;3434:28;3453:8;3434:18;:28::i;:::-;3410:53;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3403:60;;;;3004:466;;;:::o;1356:239:95:-;1421:7;1454:18;:16;:18::i;:::-;1444:6;:28;1440:82;;1488:23;;-1:-1:-1;;;1488:23:95;;14244:2:117;1488:23:95;;;14226:21:117;14283:2;14263:18;;;14256:30;-1:-1:-1;;;14302:18:117;;;14295:43;14355:18;;1488:23:95;14042:337:117;1440:82:95;-1:-1:-1;;;;;;;;;;;1538:50:95;;1581:6;;1538:50;;;;;;:::i;:::-;;;;;;;;;1531:57;;1356:239;;;:::o;919:99:98:-;965:13;997:14;:12;:14::i;16726:186:1:-;16823:4;16846:23;:21;:23::i;:::-;-1:-1:-1;;;;;16846:49:1;;;;;;;:42;;;;;:49;;;;;;;;:59;;;;;;;;;;-1:-1:-1;16846:59:1;;;;;16726:186::o;514:113:24:-;436:8:25;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:25;:10;-1:-1:-1;;;;;422:22:25;;418:54;;453:19;;-1:-1:-1;;;453:19:25;;;;;;;;;;;418:54;593:27:24::1;612:7;593:18;:27::i;8233:103:92:-:0;8284:4;8321:8;:6;:8::i;:::-;-1:-1:-1;;;;;8307:22:92;:10;-1:-1:-1;;;;;8307:22:92;;8300:29;;8233:103;:::o;4588:125:1:-;4643:7;4669:23;:21;:23::i;:::-;:37;;4588:125;-1:-1:-1;4588:125:1:o;475:289:107:-;568:36;660:21;;;213:54:108;660:21:107;;;;;;;;654:35;;;;;:::i;:::-;:40;;-1:-1:-1;646:68:107;;;;-1:-1:-1;;;646:68:107;;14586:2:117;646:68:107;;;14568:21:117;14625:2;14605:18;;;14598:30;-1:-1:-1;;;14644:18:117;;;14637:45;14699:18;;646:68:107;14384:339:117;646:68:107;724:11;:21;;;;;;;;;;:33;748:9;724:21;:33;:::i;33382:110:1:-;33458:27;33468:2;33472:8;33458:27;;;;;;;;;;;;:9;:27::i;1793:159:0:-;1740:46;;1793:159::o;17161:325:1:-;17226:4;17313:23;:21;:23::i;:::-;:37;17303:47;;17261:199;;;;;-1:-1:-1;;;17387:23:1;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;:68;:73;17242:218;17161:325;-1:-1:-1;;17161:325:1:o;1485:638:104:-;242:42:103;1674:45:104;:49;1670:447;;1970:67;;-1:-1:-1;;;1970:67:104;;2021:4;1970:67;;;17144:34:117;-1:-1:-1;;;;;17214:15:117;;17194:18;;;17187:43;242:42:103;;1970::104;;17079:18:117;;1970:67:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1965:142;;2064:28;;-1:-1:-1;;;2064:28:104;;-1:-1:-1;;;;;3272:32:117;;2064:28:104;;;3254:51:117;3227:18;;2064:28:104;3108:203:117;15484:122:1;15572:27;15581:2;15585:7;15594:4;15572:8;:27::i;19458:2908::-;19595:27;19625;19644:7;19625:18;:27::i;:::-;19595:57;;19708:4;-1:-1:-1;;;;;19667:45:1;19683:19;-1:-1:-1;;;;;19667:45:1;;19663:86;;19721:28;;-1:-1:-1;;;19721:28:1;;;;;;;;;;;19663:86;19761:27;19790:23;19817:35;19844:7;19817:26;:35::i;:::-;19760:92;;;;19949:68;19974:15;19991:4;19997:19;40955:10;;40869:103;19997:19;-1:-1:-1;;;;;18040:32:1;;;17886:28;;18167:20;;18189:30;;18164:56;;17590:646;19949:68;19944:179;;20036:43;20053:4;40955:10;16726:186;:::i;20036:43::-;20031:92;;20088:35;;-1:-1:-1;;;20088:35:1;;;;;;;;;;;20031:92;-1:-1:-1;;;;;20138:16:1;;20134:52;;20163:23;;-1:-1:-1;;;20163:23:1;;;;;;;;;;;20134:52;20329:15;20326:157;;;20467:1;20446:19;20439:30;20326:157;20855:23;:21;:23::i;:::-;-1:-1:-1;;;;;20855:48:1;;;;;;:42;;;;;:48;;;;;20853:50;;-1:-1:-1;;20853:50:1;;;20947:23;:21;:23::i;:::-;-1:-1:-1;;;;;20947:46:1;;;;;;:42;;;;;:46;;;;;;20945:48;;;;;;14612:11;14587:23;14583:41;14570:63;-1:-1:-1;;;14570:63:1;21257:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:196;;;;-1:-1:-1;;;21570:47:1;;:52;;21566:689;;21674:1;21664:11;;21795:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;:59;;21791:450;;21955:23;:21;:23::i;:::-;:37;21940:52;;21936:287;;22181:19;22124:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;21936:287;21624:631;21566:689;22299:7;22295:2;-1:-1:-1;;;;;22280:27:1;22289:4;-1:-1:-1;;;;;22280:27:1;-1:-1:-1;;;;;;;;;;;22280:27:1;;;;;;;;;22317:42;19585:2781;;;19458:2908;;;:::o;1452:435:111:-;1534:7;1680:31;;;:21;:31;;;;;;;;1628:83;;;;;;;;;-1:-1:-1;;;;;1628:83:111;;;;;-1:-1:-1;;;1628:83:111;;;;;;;;;;;;1534:7;;-1:-1:-1;;;;;;;;;;;363:49:112;1628:83:111;1729:39;:151;;1833:25;;1860:19;;;;1729:151;;;1784:18;;-1:-1:-1;;;;;1784:18:111;;;-1:-1:-1;;;1804:12:111;;;;1729:151;1722:158;;;;;;1452:435;;;:::o;22457:187:1:-;22598:39;22615:4;22621:2;22625:7;22598:39;;;;;;;;;;;;:16;:39::i;35335:3159::-;35414:27;35444;35463:7;35444:18;:27::i;:::-;35414:57;-1:-1:-1;35414:57:1;35482:12;;35602:35;35629:7;35602:26;:35::i;:::-;35545:92;;;;35652:13;35648:312;;;35771:68;35796:15;35813:4;40955:10;35819:19;40869:103;35771:68;35766:183;;35862:43;35879:4;40955:10;16726:186;:::i;35862:43::-;35857:92;;35914:35;;-1:-1:-1;;;35914:35:1;;;;;;;;;;;35857:92;36110:15;36107:157;;;36248:1;36227:19;36220:30;36107:157;36905:32;36853:23;:21;:23::i;:::-;-1:-1:-1;;;;;36853:48:1;;;;;;:42;;;;;:48;;;;;;:84;;;;;;;;;14612:11;14587:23;14583:41;14570:63;-1:-1:-1;;;14570:63:1;37168:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:226;;;;-1:-1:-1;;;37511:47:1;;:52;;37507:689;;37615:1;37605:11;;37736:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;:59;;37732:450;;37896:23;:21;:23::i;:::-;:37;37881:52;;37877:287;;38122:19;38065:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;:76;37877:287;37565:631;37507:689;38221:35;;38248:7;;38244:1;;-1:-1:-1;;;;;38221:35:1;;;-1:-1:-1;;;;;;;;;;;38221:35:1;38244:1;;38221:35;38439:23;:21;:23::i;:::-;:36;;;;:38;;;;;;;-1:-1:-1;;;;;;35335:3159:1:o;2524:442:95:-;2660:25;;2728:24;2739:13;2728:8;:24;:::i;:::-;-1:-1:-1;;;;;;;;;;;2887:24:95;;;;;;;;;;;;2800:41;2921:18;;;:9;2887:24;2921:18;;;;2718:34;;-1:-1:-1;2718:34:95;;-1:-1:-1;289:59:96;2921:38:95;2942:17;2921:18;:38;:::i;:::-;;2708:258;2524:442;;;;;;:::o;3653:158:1:-;-1:-1:-1;;;;;;;;;;;2557:52:2;;;;;;2536:151;;;;-1:-1:-1;;;2536:151:2;;;;;;;:::i;:::-;3764:40:1::1;3789:5;3796:7;3764:24;:40::i;1203:207:25:-:0;186:49:26;1359:7:25;;1338:38;;-1:-1:-1;;;;;1338:38:25;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:25;-1:-1:-1;;;;;1386:17:25;;;;;;;;;;1203:207::o;293:410:111:-;418:6;404:11;:20;400:76;;;440:25;;-1:-1:-1;;;440:25:111;;18244:2:117;440:25:111;;;18226:21:117;18283:2;18263:18;;;18256:30;-1:-1:-1;;;18302:18:117;;;18295:45;18357:18;;440:25:111;18042:339:117;400:76:111;485:31;-1:-1:-1;;;;;;;;;;;552:38:111;;-1:-1:-1;;;;;552:38:111;;-1:-1:-1;;;;;;600:34:111;;;;;-1:-1:-1;;;600:34:111;;;;;;;650:46;;3721:25:117;;;552:38:111;;-1:-1:-1;552:38:111;650:46;;3709:2:117;3694:18;650:46:111;;;;;;;390:313;293:410;;:::o;304:1093:104:-;242:42:103;735:45:104;:49;731:660;;805:52;;-1:-1:-1;;;805:52:104;;851:4;805:52;;;3254:51:117;242:42:103;;805:37:104;;3227:18:117;;805:52:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;800:581;;881:9;877:490;;;914:92;;-1:-1:-1;;;914:92:104;;968:4;914:92;;;17144:34:117;-1:-1:-1;;;;;17214:15:117;;17194:18;;;17187:43;242:42:103;;914:45:104;;17079:18:117;;914:92:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:490;-1:-1:-1;;;;;1057:44:104;;;1053:296;;1129:94;;-1:-1:-1;;;1129:94:104;;1185:4;1129:94;;;17144:34:117;-1:-1:-1;;;;;17214:15:117;;17194:18;;;17187:43;242:42:103;;1129:47:104;;17079:18:117;;1129:94:104;16932:304:117;1053:296:104;1278:48;;-1:-1:-1;;;1278:48:104;;1320:4;1278:48;;;3254:51:117;242:42:103;;1278:33:104;;3227:18:117;;1278:48:104;3108:203:117;899:238:41;-1:-1:-1;;;;;;986:25:41;;;;;982:70;;1020:32;;-1:-1:-1;;;1020:32:41;;;;;;;;;;;982:70;-1:-1:-1;;;;;;1062:59:41;;;;:46;:59;;;219:52:42;1062:59:41;;;;;:68;;-1:-1:-1;;1062:68:41;;;;;;;;;;899:238::o;11921:1752:1:-;11988:14;12069:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;;;;12167:24:1;;:29;;12163:1446;;12304:6;12314:1;12304:11;12300:1011;;12354:23;:21;:23::i;:::-;:37;12343:48;;12339:92;;12400:31;;-1:-1:-1;;;12400:31:1;;;;;;;;;;;12339:92;13102:23;:21;:23::i;:::-;-1:-1:-1;;13144:9:1;;;13102:52;;;;:41;;;;;:52;;;;;;;;-1:-1:-1;13206:25:1;;13018:275;13206:25;;11921:1752;;;:::o;12163:1446::-;13635:31;;-1:-1:-1;;;13635:31:1;;;;;;;;;;;189:133:95;240:7;-1:-1:-1;;;;;;;;;;;266:33:95;355:206:96;647:111:25;186:49:26;722:29:25;-1:-1:-1;;;;;722:29:25;;647:111::o;478:290:99:-;244:53:100;627:37:99;;542:40;;244:53:100;;627:37:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;690:4;674:1;:13;;:20;;;;;;:::i;:::-;;710:51;747:7;756:4;710:51;;;;;;;:::i;1026:420:111:-;1141:6;1134:4;:13;1130:69;;;1163:25;;-1:-1:-1;;;1163:25:111;;18244:2:117;1163:25:111;;;18226:21:117;18283:2;18263:18;;;18256:30;-1:-1:-1;;;18302:18:117;;;18295:45;18357:18;;1163:25:111;18042:339:117;1130:69:111;1310:70;;;;;;;;-1:-1:-1;;;;;1310:70:111;;;;;;;;;;;;;;;;;-1:-1:-1;1276:31:111;;;:21;:31;;;;;:104;;;;;;;;;-1:-1:-1;;;1276:104:111;-1:-1:-1;;;;;;1276:104:111;;;;;;;;;;;;;;;1396:43;;3721:25:117;;;1396:43:111;;-1:-1:-1;;;;;;;;;;;363:49:112;1276:31:111;;1396:43;;;;;;;;;1120:326;1026:420;;;:::o;16321:255:1:-;16491:8;16415:23;:21;:23::i;:::-;40955:10;16415:63;;;;:42;;;;;:63;;;;;;;;-1:-1:-1;;;;;16415:73:1;;;;;;;;;;;;:84;;-1:-1:-1;;16415:84:1;;;;;;;;;;;16514:55;;2140:14:117;;2133:22;2115:41;;16415:73:1;;40955:10;;16514:55;;2088:18:117;16514:55:1;;;;;;;16321:255;;:::o;23225:396::-;23394:31;23407:4;23413:2;23417:7;23394:12;:31::i;:::-;-1:-1:-1;;;;;23439:14:1;;;:19;23435:180;;23477:56;23508:4;23514:2;23518:7;23527:5;23477:30;:56::i;:::-;23472:143;;23560:40;;-1:-1:-1;;;23560:40:1;;;;;;;;;;;257:150:107;352:38;:48;;;213:54:108;352:48:107;;;;;345:55;;320:13;;352:48;345:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:150;;;:::o;1709:484:95:-;1771:13;-1:-1:-1;;;;;;;;;;;1796:41:95;1912:18;:16;:18::i;:::-;1940:37;;;;;;;;;;;;;;;;;;;1884:46;;-1:-1:-1;1940:24:95;;:37;1967:1;;1940:37;;1967:1;1940:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1993:9;1988:163;2012:17;2008:1;:21;1988:163;;;2068:7;2076:1;2068:10;;;;;;;;:::i;:::-;;;;;;;2057:8;:21;2053:88;;;2105:1;:9;;:21;2115:7;2123:1;2115:10;;;;;;;;:::i;:::-;;;;;;;2105:21;;;;;;;;;;;2098:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1709:484;;;:::o;2053:88::-;2031:6;2036:1;2031:6;;:::i;:::-;;;1988:163;;;-1:-1:-1;2161:25:95;;-1:-1:-1;;;2161:25:95;;18976:2:117;2161:25:95;;;18958:21:117;19015:2;18995:18;;;18988:30;-1:-1:-1;;;19034:18:117;;;19027:45;19089:18;;2161:25:95;18774:339:117;605:520:63;661:13;690:5;699:1;690:10;686:51;;-1:-1:-1;;716:10:63;;;;;;;;;;;;-1:-1:-1;;;716:10:63;;;;;605:520::o;686:51::-;762:5;747:12;802:75;809:9;;802:75;;834:8;;;;:::i;:::-;;-1:-1:-1;856:10:63;;-1:-1:-1;864:2:63;856:10;;:::i;:::-;;;802:75;;;887:19;919:6;909:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;909:17:63;;887:39;;937:150;944:10;;937:150;;970:11;980:1;970:11;;:::i;:::-;;-1:-1:-1;1038:10:63;1046:2;1038:5;:10;:::i;:::-;1025:24;;:2;:24;:::i;:::-;1012:39;;995:6;1002;995:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;995:56:63;;;;;;;;-1:-1:-1;1065:11:63;1074:2;1065:11;;:::i;:::-;;;937:150;;266:130:99;313:13;244:53:100;338:51:99;;;;;:::i;1100:97:25:-;1172:18;1182:7;1172:9;:18::i;32586:717:1:-;32712:19;32718:2;32722:8;32712:5;:19::i;:::-;-1:-1:-1;;;;;32770:14:1;;;:19;32766:521;;32809:11;32823:23;:21;:23::i;:::-;:37;;-1:-1:-1;32894:14:1;;;32926:229;32956:62;32995:1;32999:2;33003:7;;;;;;33012:5;32956:30;:62::i;:::-;32951:165;;33053:40;;-1:-1:-1;;;33053:40:1;;;;;;;;;;;32951:165;33150:3;33142:5;:11;32926:229;;33259:3;33218:23;:21;:23::i;:::-;:37;:44;33214:58;;33264:8;;;34272:501;34396:13;34412:16;34420:7;34412;:16::i;:::-;34396:32;;34443:13;34439:215;;;40955:10;-1:-1:-1;;;;;34474:28:1;;;34470:184;;34525:44;34542:5;40955:10;16726:186;:::i;34525:44::-;34520:134;;34600:35;;-1:-1:-1;;;34600:35:1;;;;;;;;;;;34520:134;34721:2;34664:23;:21;:23::i;:::-;:48;;;;:39;;;;;:48;;;;;;:59;;-1:-1:-1;;;;;;34664:59:1;-1:-1:-1;;;;;34664:59:1;;;;;;34738:28;34664:48;;34738:28;;;;;;;;;;34664:48;34738:28;34386:387;34272:501;;;:::o;18344:513::-;18443:27;18472:23;18511:53;18567:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;;18567:48:1;;;;18815:26;;18567:48;;18815:26;;-1:-1:-1;18344:513:1:o;3817:281::-;-1:-1:-1;;;;;;;;;;;2557:52:2;;;;;;2536:151;;;;-1:-1:-1;;;2536:151:2;;;;;;;:::i;:::-;3970:5:1::1;3938:23;:21;:23::i;:::-;:29;;::::0;:37:::1;::::0;:29;:37:::1;:::i;:::-;;4019:7;3985:23;:21;:23::i;:::-;:31;;::::0;:41:::1;::::0;:31;:41:::1;:::i;:::-;-1:-1:-1::0;4480:7:1;4036:23:::1;:21;:23::i;:::-;:55:::0;-1:-1:-1;;3817:281:1:o;25647:717::-;25837:99;;-1:-1:-1;;;25837:99:1;;25805:4;;-1:-1:-1;;;;;25837:56:1;;;;;:99;;40955:10;;25915:4;;25921:7;;25930:5;;25837:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25837:99:1;;;;;;;;-1:-1:-1;;25837:99:1;;;;;;;;;;;;:::i;:::-;;;25821:537;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26123:6;:13;26140:1;26123:18;26119:229;;26168:40;;-1:-1:-1;;;26168:40:1;;;;;;;;;;;26119:229;26308:6;26302:13;26293:6;26289:2;26285:15;26278:38;25821:537;-1:-1:-1;;;;;;25990:75:1;-1:-1:-1;;;25990:75:1;;-1:-1:-1;25647:717:1;;;;;;:::o;26810:2998::-;26882:20;26905:23;:21;:23::i;:::-;:37;;-1:-1:-1;26905:37:1;26956:13;;;26952:44;;26978:18;;-1:-1:-1;;;26978:18:1;;;;;;;;;;;26952:44;27533:32;27521:45;;27471:23;:21;:23::i;:::-;-1:-1:-1;;;;;27471:46:1;;;;;;:42;;;;;:46;;;;;;:95;;;;;;;;;14612:11;14587:23;14583:41;-1:-1:-1;15032:15:1;;15006:24;15002:46;14580:52;14570:63;27802:23;:21;:23::i;:::-;:55;;;;:41;;;;;:55;;;;;:194;;;;-1:-1:-1;;;;;28575:25:1;;;28055:23;;;;27844:12;;28575:25;;-1:-1:-1;;;;;;;;;;;27802:55:1;;28663:328;29311:1;29297:12;29293:20;29252:339;29351:3;29342:7;29339:16;29252:339;;29565:7;29555:8;29552:1;-1:-1:-1;;;;;;;;;;;29522:1:1;29519;29514:59;29403:1;29390:15;29252:339;;;29256:75;29622:8;29634:1;29622:13;29618:45;;29644:19;;-1:-1:-1;;;29644:19:1;;;;;;;;;;;29618:45;29718:3;29678:23;:21;:23::i;:::-;:43;-1:-1:-1;29741:60:1;;-1:-1:-1;7129:225:92;14:173:117;82:20;;-1:-1:-1;;;;;131:31:117;;121:42;;111:70;;177:1;174;167:12;192:127;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:632;389:5;419:18;460:2;452:6;449:14;446:40;;;466:18;;:::i;:::-;541:2;535:9;509:2;595:15;;-1:-1:-1;;591:24:117;;;617:2;587:33;583:42;571:55;;;641:18;;;661:22;;;638:46;635:72;;;687:18;;:::i;:::-;727:10;723:2;716:22;756:6;747:15;;786:6;778;771:22;826:3;817:6;812:3;808:16;805:25;802:45;;;843:1;840;833:12;802:45;893:6;888:3;881:4;873:6;869:17;856:44;948:1;941:4;932:6;924;920:19;916:30;909:41;;;;324:632;;;;;:::o;961:222::-;1004:5;1057:3;1050:4;1042:6;1038:17;1034:27;1024:55;;1075:1;1072;1065:12;1024:55;1097:80;1173:3;1164:6;1151:20;1144:4;1136:6;1132:17;1097:80;:::i;:::-;1088:89;961:222;-1:-1:-1;;;961:222:117:o;1188:396::-;1266:6;1274;1327:2;1315:9;1306:7;1302:23;1298:32;1295:52;;;1343:1;1340;1333:12;1295:52;1366:29;1385:9;1366:29;:::i;:::-;1356:39;;1446:2;1435:9;1431:18;1418:32;1473:18;1465:6;1462:30;1459:50;;;1505:1;1502;1495:12;1459:50;1528;1570:7;1561:6;1550:9;1546:22;1528:50;:::i;:::-;1518:60;;;1188:396;;;;;:::o;1589:131::-;-1:-1:-1;;;;;;1663:32:117;;1653:43;;1643:71;;1710:1;1707;1700:12;1725:245;1783:6;1836:2;1824:9;1815:7;1811:23;1807:32;1804:52;;;1852:1;1849;1842:12;1804:52;1891:9;1878:23;1910:30;1934:5;1910:30;:::i;2167:250::-;2252:1;2262:113;2276:6;2273:1;2270:13;2262:113;;;2352:11;;;2346:18;2333:11;;;2326:39;2298:2;2291:10;2262:113;;;-1:-1:-1;;2409:1:117;2391:16;;2384:27;2167:250::o;2422:271::-;2464:3;2502:5;2496:12;2529:6;2524:3;2517:19;2545:76;2614:6;2607:4;2602:3;2598:14;2591:4;2584:5;2580:16;2545:76;:::i;:::-;2675:2;2654:15;-1:-1:-1;;2650:29:117;2641:39;;;;2682:4;2637:50;;2422:271;-1:-1:-1;;2422:271:117:o;2698:220::-;2847:2;2836:9;2829:21;2810:4;2867:45;2908:2;2897:9;2893:18;2885:6;2867:45;:::i;2923:180::-;2982:6;3035:2;3023:9;3014:7;3010:23;3006:32;3003:52;;;3051:1;3048;3041:12;3003:52;-1:-1:-1;3074:23:117;;2923:180;-1:-1:-1;2923:180:117:o;3316:254::-;3384:6;3392;3445:2;3433:9;3424:7;3420:23;3416:32;3413:52;;;3461:1;3458;3451:12;3413:52;3484:29;3503:9;3484:29;:::i;:::-;3474:39;3560:2;3545:18;;;;3532:32;;-1:-1:-1;;;3316:254:117:o;3757:328::-;3834:6;3842;3850;3903:2;3891:9;3882:7;3878:23;3874:32;3871:52;;;3919:1;3916;3909:12;3871:52;3942:29;3961:9;3942:29;:::i;:::-;3932:39;;3990:38;4024:2;4013:9;4009:18;3990:38;:::i;:::-;3980:48;;4075:2;4064:9;4060:18;4047:32;4037:42;;3757:328;;;;;:::o;4090:248::-;4158:6;4166;4219:2;4207:9;4198:7;4194:23;4190:32;4187:52;;;4235:1;4232;4225:12;4187:52;-1:-1:-1;;4258:23:117;;;4328:2;4313:18;;;4300:32;;-1:-1:-1;4090:248:117:o;4912:464::-;4999:6;5007;5015;5068:2;5056:9;5047:7;5043:23;5039:32;5036:52;;;5084:1;5081;5074:12;5036:52;5107:29;5126:9;5107:29;:::i;:::-;5097:39;;5183:2;5172:9;5168:18;5155:32;5145:42;;5238:2;5227:9;5223:18;5210:32;5265:18;5257:6;5254:30;5251:50;;;5297:1;5294;5287:12;5251:50;5320;5362:7;5353:6;5342:9;5338:22;5320:50;:::i;:::-;5310:60;;;4912:464;;;;;:::o;5381:778::-;5486:6;5494;5502;5510;5563:3;5551:9;5542:7;5538:23;5534:33;5531:53;;;5580:1;5577;5570:12;5531:53;5620:9;5607:23;5649:18;5690:2;5682:6;5679:14;5676:34;;;5706:1;5703;5696:12;5676:34;5729:50;5771:7;5762:6;5751:9;5747:22;5729:50;:::i;:::-;5719:60;;5832:2;5821:9;5817:18;5804:32;5788:48;;5861:2;5851:8;5848:16;5845:36;;;5877:1;5874;5867:12;5845:36;;5900:52;5944:7;5933:8;5922:9;5918:24;5900:52;:::i;:::-;5890:62;;;5971:38;6005:2;5994:9;5990:18;5971:38;:::i;:::-;5961:48;;6059:2;6048:9;6044:18;6031:32;6103:6;6096:5;6092:18;6085:5;6082:29;6072:57;;6125:1;6122;6115:12;6072:57;5381:778;;;;-1:-1:-1;5381:778:117;;-1:-1:-1;;5381:778:117:o;6164:186::-;6223:6;6276:2;6264:9;6255:7;6251:23;6247:32;6244:52;;;6292:1;6289;6282:12;6244:52;6315:29;6334:9;6315:29;:::i;6355:322::-;6424:6;6477:2;6465:9;6456:7;6452:23;6448:32;6445:52;;;6493:1;6490;6483:12;6445:52;6533:9;6520:23;6566:18;6558:6;6555:30;6552:50;;;6598:1;6595;6588:12;6552:50;6621;6663:7;6654:6;6643:9;6639:22;6621:50;:::i;6682:322::-;6759:6;6767;6775;6828:2;6816:9;6807:7;6803:23;6799:32;6796:52;;;6844:1;6841;6834:12;6796:52;6880:9;6867:23;6857:33;;6909:38;6943:2;6932:9;6928:18;6909:38;:::i;7009:118::-;7095:5;7088:13;7081:21;7074:5;7071:32;7061:60;;7117:1;7114;7107:12;7132:315;7197:6;7205;7258:2;7246:9;7237:7;7233:23;7229:32;7226:52;;;7274:1;7271;7264:12;7226:52;7297:29;7316:9;7297:29;:::i;:::-;7287:39;;7376:2;7365:9;7361:18;7348:32;7389:28;7411:5;7389:28;:::i;:::-;7436:5;7426:15;;;7132:315;;;;;:::o;7452:626::-;7549:6;7557;7610:2;7598:9;7589:7;7585:23;7581:32;7578:52;;;7626:1;7623;7616:12;7578:52;7666:9;7653:23;7695:18;7736:2;7728:6;7725:14;7722:34;;;7752:1;7749;7742:12;7722:34;7790:6;7779:9;7775:22;7765:32;;7835:7;7828:4;7824:2;7820:13;7816:27;7806:55;;7857:1;7854;7847:12;7806:55;7897:2;7884:16;7923:2;7915:6;7912:14;7909:34;;;7939:1;7936;7929:12;7909:34;7992:7;7987:2;7977:6;7974:1;7970:14;7966:2;7962:23;7958:32;7955:45;7952:65;;;8013:1;8010;8003:12;7952:65;8044:2;8036:11;;;;;8066:6;;-1:-1:-1;7452:626:117;;-1:-1:-1;;;;7452:626:117:o;8083:801::-;8243:4;8272:2;8312;8301:9;8297:18;8342:2;8331:9;8324:21;8365:6;8400;8394:13;8431:6;8423;8416:22;8469:2;8458:9;8454:18;8447:25;;8531:2;8521:6;8518:1;8514:14;8503:9;8499:30;8495:39;8481:53;;8569:2;8561:6;8557:15;8590:1;8600:255;8614:6;8611:1;8608:13;8600:255;;;8707:2;8703:7;8691:9;8683:6;8679:22;8675:36;8670:3;8663:49;8735:40;8768:6;8759;8753:13;8735:40;:::i;:::-;8725:50;-1:-1:-1;8833:12:117;;;;8798:15;;;;8636:1;8629:9;8600:255;;;-1:-1:-1;8872:6:117;;8083:801;-1:-1:-1;;;;;;;8083:801:117:o;8889:667::-;8984:6;8992;9000;9008;9061:3;9049:9;9040:7;9036:23;9032:33;9029:53;;;9078:1;9075;9068:12;9029:53;9101:29;9120:9;9101:29;:::i;:::-;9091:39;;9149:38;9183:2;9172:9;9168:18;9149:38;:::i;:::-;9139:48;;9234:2;9223:9;9219:18;9206:32;9196:42;;9289:2;9278:9;9274:18;9261:32;9316:18;9308:6;9305:30;9302:50;;;9348:1;9345;9338:12;9302:50;9371:22;;9424:4;9416:13;;9412:27;-1:-1:-1;9402:55:117;;9453:1;9450;9443:12;9402:55;9476:74;9542:7;9537:2;9524:16;9519:2;9515;9511:11;9476:74;:::i;:::-;9466:84;;;8889:667;;;;;;;:::o;9561:260::-;9629:6;9637;9690:2;9678:9;9669:7;9665:23;9661:32;9658:52;;;9706:1;9703;9696:12;9658:52;9729:29;9748:9;9729:29;:::i;:::-;9719:39;;9777:38;9811:2;9800:9;9796:18;9777:38;:::i;:::-;9767:48;;9561:260;;;;;:::o;10178:317::-;-1:-1:-1;;;;;10355:32:117;;10337:51;;10424:2;10419;10404:18;;10397:30;;;-1:-1:-1;;10444:45:117;;10470:18;;10462:6;10444:45;:::i;10500:380::-;10579:1;10575:12;;;;10622;;;10643:61;;10697:4;10689:6;10685:17;10675:27;;10643:61;10750:2;10742:6;10739:14;10719:18;10716:38;10713:161;;10796:10;10791:3;10787:20;10784:1;10777:31;10831:4;10828:1;10821:15;10859:4;10856:1;10849:15;10713:161;;10500:380;;;:::o;10885:127::-;10946:10;10941:3;10937:20;10934:1;10927:31;10977:4;10974:1;10967:15;11001:4;10998:1;10991:15;11017:168;11057:7;11123:1;11119;11115:6;11111:14;11108:1;11105:21;11100:1;11093:9;11086:17;11082:45;11079:71;;;11130:18;;:::i;:::-;-1:-1:-1;11170:9:117;;11017:168::o;11190:127::-;11251:10;11246:3;11242:20;11239:1;11232:31;11282:4;11279:1;11272:15;11306:4;11303:1;11296:15;11322:120;11362:1;11388;11378:35;;11393:18;;:::i;:::-;-1:-1:-1;11427:9:117;;11322:120::o;11447:388::-;11681:1;11677;11672:3;11668:11;11664:19;11656:6;11652:32;11641:9;11634:51;11721:6;11716:2;11705:9;11701:18;11694:34;11764:2;11759;11748:9;11744:18;11737:30;11615:4;11784:45;11825:2;11814:9;11810:18;11802:6;11784:45;:::i;:::-;11776:53;11447:388;-1:-1:-1;;;;;11447:388:117:o;12264:338::-;12466:2;12448:21;;;12505:2;12485:18;;;12478:30;-1:-1:-1;;;12539:2:117;12524:18;;12517:44;12593:2;12578:18;;12264:338::o;12607:127::-;12668:10;12663:3;12659:20;12656:1;12649:31;12699:4;12696:1;12689:15;12723:4;12720:1;12713:15;12739:521;12816:4;12822:6;12882:11;12869:25;12976:2;12972:7;12961:8;12945:14;12941:29;12937:43;12917:18;12913:68;12903:96;;12995:1;12992;12985:12;12903:96;13022:33;;13074:20;;;-1:-1:-1;13117:18:117;13106:30;;13103:50;;;13149:1;13146;13139:12;13103:50;13182:4;13170:17;;-1:-1:-1;13213:14:117;13209:27;;;13199:38;;13196:58;;;13250:1;13247;13240:12;13196:58;12739:521;;;;;:::o;13265:271::-;13448:6;13440;13435:3;13422:33;13404:3;13474:16;;13499:13;;;13474:16;13265:271;-1:-1:-1;13265:271:117:o;13541:496::-;13720:3;13758:6;13752:13;13774:66;13833:6;13828:3;13821:4;13813:6;13809:17;13774:66;:::i;:::-;13903:13;;13862:16;;;;13925:70;13903:13;13862:16;13972:4;13960:17;;13925:70;:::i;:::-;14011:20;;13541:496;-1:-1:-1;;;;13541:496:117:o;14854:545::-;14956:2;14951:3;14948:11;14945:448;;;14992:1;15017:5;15013:2;15006:17;15062:4;15058:2;15048:19;15132:2;15120:10;15116:19;15113:1;15109:27;15103:4;15099:38;15168:4;15156:10;15153:20;15150:47;;;-1:-1:-1;15191:4:117;15150:47;15246:2;15241:3;15237:12;15234:1;15230:20;15224:4;15220:31;15210:41;;15301:82;15319:2;15312:5;15309:13;15301:82;;;15364:17;;;15345:1;15334:13;15301:82;;15575:1352;15701:3;15695:10;15728:18;15720:6;15717:30;15714:56;;;15750:18;;:::i;:::-;15779:97;15869:6;15829:38;15861:4;15855:11;15829:38;:::i;:::-;15823:4;15779:97;:::i;:::-;15931:4;;15995:2;15984:14;;16012:1;16007:663;;;;16714:1;16731:6;16728:89;;;-1:-1:-1;16783:19:117;;;16777:26;16728:89;-1:-1:-1;;15532:1:117;15528:11;;;15524:24;15520:29;15510:40;15556:1;15552:11;;;15507:57;16830:81;;15977:944;;16007:663;14801:1;14794:14;;;14838:4;14825:18;;-1:-1:-1;;16043:20:117;;;16161:236;16175:7;16172:1;16169:14;16161:236;;;16264:19;;;16258:26;16243:42;;16356:27;;;;16324:1;16312:14;;;;16191:19;;16161:236;;;16165:3;16425:6;16416:7;16413:19;16410:201;;;16486:19;;;16480:26;-1:-1:-1;;16569:1:117;16565:14;;;16581:3;16561:24;16557:37;16553:42;16538:58;16523:74;;16410:201;-1:-1:-1;;;;;16657:1:117;16641:14;;;16637:22;16624:36;;-1:-1:-1;15575:1352:117:o;17241:245::-;17308:6;17361:2;17349:9;17340:7;17336:23;17332:32;17329:52;;;17377:1;17374;17367:12;17329:52;17409:9;17403:16;17428:28;17450:5;17428:28;:::i;17491:125::-;17556:9;;;17577:10;;;17574:36;;;17590:18;;:::i;17621:416::-;17823:2;17805:21;;;17862:2;17842:18;;;17835:30;17901:34;17896:2;17881:18;;17874:62;-1:-1:-1;;;17967:2:117;17952:18;;17945:50;18027:3;18012:19;;17621:416::o;18386:383::-;18583:2;18572:9;18565:21;18546:4;18609:45;18650:2;18639:9;18635:18;18627:6;18609:45;:::i;:::-;18702:9;18694:6;18690:22;18685:2;18674:9;18670:18;18663:50;18730:33;18756:6;18748;18730:33;:::i;19118:135::-;19157:3;19178:17;;;19175:43;;19198:18;;:::i;:::-;-1:-1:-1;19245:1:117;19234:13;;19118:135::o;19258:128::-;19325:9;;;19346:11;;;19343:37;;;19360:18;;:::i;19391:112::-;19423:1;19449;19439:35;;19454:18;;:::i;:::-;-1:-1:-1;19488:9:117;;19391:112::o;19508:489::-;-1:-1:-1;;;;;19777:15:117;;;19759:34;;19829:15;;19824:2;19809:18;;19802:43;19876:2;19861:18;;19854:34;;;19924:3;19919:2;19904:18;;19897:31;;;19702:4;;19945:46;;19971:19;;19963:6;19945:46;:::i;:::-;19937:54;19508:489;-1:-1:-1;;;;;;19508:489:117:o;20002:249::-;20071:6;20124:2;20112:9;20103:7;20099:23;20095:32;20092:52;;;20140:1;20137;20130:12;20092:52;20172:9;20166:16;20191:30;20215:5;20191:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "_getBatchIdAtIndex(uint256)": "d28ce35e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchMintTo(address,uint256,string)": "5003c7c3",
    "burn(uint256)": "42966c68",
    "contractURI()": "e8a3d485",
    "exists(uint256)": "4f558e79",
    "getApproved(uint256)": "081812fc",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "initialize(string,string,address,uint16)": "5881bfc1",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedOrOwner(address,uint256)": "430c2081",
    "mintTo(address,string)": "0075a317",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"BatchMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"_getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"batchMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_royaltyBps\",\"type\":\"uint16\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isApprovedOrOwnerOf\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OperatorNotAllowed(address)\":[{\"details\":\"Emitted when an operator is not allowed.\"}]},\"kind\":\"dev\",\"methods\":{\"_getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"approve(address,uint256)\":{\"details\":\"See {ERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"batchMintTo(address,uint256,string)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\",\"params\":{\"_baseURI\":\"The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`\",\"_quantity\":\"The number of NFTs to mint.\",\"_to\":\"The recipient of the NFT to mint.\"}},\"burn(uint256)\":{\"details\":\"ERC721A's `_burn(uint256,bool)` internally checks for token approvals.\",\"params\":{\"_tokenId\":\"The tokenId of the NFT to burn.\"}},\"contractURI()\":{\"details\":\"Returns the metadata URI of the contract.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"mintTo(address,string)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\",\"params\":{\"_to\":\"The recipient of the NFT to mint.\",\"_tokenURI\":\"The full metadata URI for the NFT minted.\"}},\"multicall(bytes[])\":{\"params\":{\"data\":\"array of function call data payloads\"},\"returns\":{\"results\":\"array of function call results\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"returns\":{\"_0\":\"conrtact owner\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {ERC721-_safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC721-setApprovalForAll}.\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"supportsInterface(bytes4)\":{\"details\":\"override ERC721AUpgradeable to use solidstates ERC165BaseInternal\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"See `BatchMintMetadata` for handling of metadata in this contract.\",\"params\":{\"_tokenId\":\"The tokenId of an NFT.\"}},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC721-_transferFrom}.\"},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"_getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"batchMintTo(address,uint256,string)\":{\"notice\":\"Lets an authorized address mint an NFT to a recipient.\"},\"burn(uint256)\":{\"notice\":\"Lets an owner or approved operator burn the NFT of the given tokenId.\"},\"exists(uint256)\":{\"notice\":\"Returns whether a given token id has been minted\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isApprovedOrOwner(address,uint256)\":{\"notice\":\"Returns whether a given address is the owner, or approved to transfer an NFT.\"},\"mintTo(address,string)\":{\"notice\":\"Lets an authorized address mint an NFT to a recipient.\"},\"multicall(bytes[])\":{\"notice\":\"batch function calls to the contract and return the results of each\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be minted.\"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"tokenURI(uint256)\":{\"notice\":\"Returns the metadata URI for an NFT.\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/ERC721Base.sol\":\"ERC721Base\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":@solidstate/=lib/solidstate-solidity/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solidstate-solidity/=lib/solidstate-solidity/contracts/\"]},\"sources\":{\"lib/ERC721A-Upgradeable/contracts/ERC721AStorage.sol\":{\"keccak256\":\"0x318831b891d003c94fc2a92ed62a1468809f21e5be110fc59798d3c5c4eb2776\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942d183f09446eb97a176a208a4762fa682e4d78233f17d3d975b79dd29ab632\",\"dweb:/ipfs/Qmer9vswYbG8sv9yZcKxHg9JA7wC3jCrAs33AJPLy8UyqM\"]},\"lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol\":{\"keccak256\":\"0xe9fea2df3839d1cd69b652418759835e4aafabc67fe4523c365be5d9c6cb42ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0759688156dc5673f6d19aa4b07beead2ae100ffab2743443a45429df384c17e\",\"dweb:/ipfs/Qmf9fRor4GmdarxmnU3HYaQSn3u8WxTsiutYgrHrvm1eT9\"]},\"lib/ERC721A-Upgradeable/contracts/ERC721A__Initializable.sol\":{\"keccak256\":\"0x4a78c3bccd097e704d6c37cf90af892eae0e3fcb13dcc37e5c1ad6c36f4240f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b2d1b219b5d96c2224b6badd91845100ee099adfb569dd898d8f305ba247c07\",\"dweb:/ipfs/QmRVNixh5LtNTDdq9aJT3kqPfZjrMmb6CC26fEuUfF61kc\"]},\"lib/ERC721A-Upgradeable/contracts/ERC721A__InitializableStorage.sol\":{\"keccak256\":\"0x361a8f273736b37718a98049c3f210381c41e4241ff24a36360e417b94ad87b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b50cfd64069938167050defd8e6640ecff6a1687ae79f7b6ffb021f3f65b60f2\",\"dweb:/ipfs/QmZa4ynQofKGCxWvM7QdVcZx3MkY3XAPeKjd65v4QvvxXK\"]},\"lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol\":{\"keccak256\":\"0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8\",\"dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK\"]},\"lib/solidstate-solidity/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"]},\"lib/solidstate-solidity/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"lib/solidstate-solidity/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"lib/solidstate-solidity/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"lib/solidstate-solidity/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xc250e493770feaa0da8e5a55d241712c1c6526caa7d8df2455c3e5fa25124c0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768e47d9ddeb15daeab0c8c1109ae43a4c2a0633bd9e4bf141488dfc9252f7ba\",\"dweb:/ipfs/QmWMTTRTncar9LptrxU7WK7WG5hHp8KsYnBGfm3cYowuP8\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xc15863a59c442e22b3f5de4e3fa79fffd45dcbe66a9fc18c52b1114c8420e177\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d81471f1ba8fbb03ce54b3e10478c858cb59cc8557530f326d0e63af122a9039\",\"dweb:/ipfs/QmTfG89JXeWNio2JtL6RpUrX2KZPRa3gAy5KFDU4xk3nMR\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x61f10707d54a93c6f75467c12247ac3b07cfea2956b85ae4045f6c58cc56d0c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f460717c8cae9b359b5697a021098ad35f44ffdf0e0c994d5e367b2d68f1175\",\"dweb:/ipfs/QmPuwfZdoghTR7ghGJLhBvoFJzm3sNRD46FyTGAeHjoNwB\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC2981Internal.sol\":{\"keccak256\":\"0xa5f4334471e853f25803798f82e6dece96df7bcf7d47a31d4be47d9b553176fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb4b06ab3f0b1d994ebe6cf3c3b3c4091daa8ae227208033dc3e5860a436e233\",\"dweb:/ipfs/QmfXKqyZM39sitH1PAvWwcaUiDPFZYeBKMktzwQUz4TB1j\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xa14655a5bdee327bc019b583b04480e8542fa6b0788e5569077ec54805d1463a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97a0c1c250247373528767dc98a0eeae79a1cf65cdcc95a282cb8cf03336409a\",\"dweb:/ipfs/QmQkwjNyCDCHntjdXTjRY7bQw8ybyQS8ogBQwfTYTypw6G\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC721Internal.sol\":{\"keccak256\":\"0x8d46d596fa0e48cdcbf8bb8d6a42120351c4d1b002156bf647f95523178cbe08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://174969541ba4ef63d3a45d9c11556fa60fc70794539d4fd78dd551d7309b0181\",\"dweb:/ipfs/QmdTzThnKwfRD33SepVvZ8WugpiLeknMLgqKNVqunMShFP\"]},\"lib/solidstate-solidity/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":{\"keccak256\":\"0xba7b4d73d42dfc9f8083ce36aed0fa2c56c73878d8bda7d64f2fb908d5e04636\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08a4de8e6995d749ecd7f8c4c60a7e242e21cf9d44821fa270566eb3d7ed678d\",\"dweb:/ipfs/QmPNgKhBsv7PieDUR8Jvb4LkC57zt82jguw8QmuJ3J4UBG\"]},\"lib/solidstate-solidity/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0xfd1cfba40f8aabda5898ffe21adeeea8c7011da12bfdad7f7aa0cf87b3635653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b80596a94faae265ecd9e03875ccebf5c1e45d94d8119dcf04e3a1cd92f5fb6\",\"dweb:/ipfs/QmVK8xje6PeEwVoZfFcugAdy43kLx59D9UHr4m8Qu9GgV9\"]},\"lib/solidstate-solidity/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xccda4b118c8c09c276a0e577168aa404ea6207aad6b384b04f5f3a8923316422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcbafa161920a2a39ac001c76ee166ae4b345bef3ee6a0c5ca505504c0e9c052\",\"dweb:/ipfs/QmTF3DPJQPLsiYTmGNZXGBkmVRs14g2bUb1QJDH4ywwMq5\"]},\"lib/solidstate-solidity/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"lib/solidstate-solidity/contracts/utils/IMulticall.sol\":{\"keccak256\":\"0x39e630bc189607ae119c1208a632009fe418cc4eb2687b28e7fdbe78af7b79b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5afde99ff69a2e02fb24b6895b629de612547643dc119d01bf9937cad5452e0b\",\"dweb:/ipfs/QmR9WDSqAeNxRnju4XBUsRmN6TdgoATp9hcoC1kSDnVuZX\"]},\"lib/solidstate-solidity/contracts/utils/Multicall.sol\":{\"keccak256\":\"0x762f15ac4c28be19d0d7fb303ade8dea6ba52ff558fb6fba36df84a839e216b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://394c7fbb2b8e6d62b6e9e78124ef327a59c3d5fec21119fee2c153e2517e2986\",\"dweb:/ipfs/QmdDuVFLAxEPqjtBfWTeXhov6Nzjh7eG35YZsricP5jQkw\"]},\"lib/solidstate-solidity/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]},\"src/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0x55f71e0f3f2a97059861659ed28c37c0155ede7bf7aab5eec563720c8ffa983a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://252bfb07a2d658afa4d18a016393b6b064355c7ba866baf70b7be92f2086e6f3\",\"dweb:/ipfs/QmbM3eWURAGjd5rKVkmdNQf4X8PXSUopWed5sJYbpNdbof\"]},\"src/tokens/ERC721/ERC721Base.sol\":{\"keccak256\":\"0x26a8643342f20392fff1e7d3f6f1d76ee55aa57bf838c6d96e61e0261737c018\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d33edb7fba2147b2bb7a51d222399c939139d6ba78a06951e49d272184ae47be\",\"dweb:/ipfs/QmWbJsSA1rrFcm2aovmobMXiMHn7wanA72pJFssvz4Zzt4\"]},\"src/tokens/ERC721/batchMintMetadata/BatchMintMetadata.sol\":{\"keccak256\":\"0xe37cc9ebcc3268bc571ee48a419f7dc93490d40cbf9cf65e486df04334413e69\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://01e6d177bd5146ef3c6b7a483a1983f8ff03eeb9c9f41ab0a04d59e025933f24\",\"dweb:/ipfs/QmXUdFosrctrEVB29B4EC68RQfpp1ZsfRV5zoF65vWJTRZ\"]},\"src/tokens/ERC721/batchMintMetadata/BatchMintMetadataInternal.sol\":{\"keccak256\":\"0x851dd41b9808ac6b5c5de639f1ed71030370b18bb1e8fb5912933627c4a21c87\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4160556dc6efb4b0583835b709fd21d0012f75828e78231d6c6097892c6b37cf\",\"dweb:/ipfs/QmWEKbA3VdvjLsnDiSVCZM94VoNQeyk1nHxjuXGRUyJwUs\"]},\"src/tokens/ERC721/batchMintMetadata/BatchMintMetadataStorage.sol\":{\"keccak256\":\"0x39fb91ee60db2e0a3bd0a847a590b78f5df3c3977852d7257bfb16091f546118\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f48467de13379e1ef3f9cd223831b3cb1995ad6e19e77cc960f4e515e23a32f9\",\"dweb:/ipfs/QmesnpNhohfbG6QAu6E5CkM7LSUZGxcct4yLGeGQyiQyno\"]},\"src/tokens/ERC721/batchMintMetadata/IBatchMintMetadata.sol\":{\"keccak256\":\"0xc778cb2150136c9375a7d6d604ff47b394c235a8e57897c99cf89ad567550f57\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5a1f946e48a409045942898dddda8866c8ed52071c346577cd3f433a1df6a45f\",\"dweb:/ipfs/QmbMBDwDn4oyVM8uwqZe7ux647NaAogEQMNZAptmy2rqs5\"]},\"src/tokens/ERC721/contractMetadata/ContractMetadata.sol\":{\"keccak256\":\"0xf9b1229a45909e915ef12af800328118db1c595aaef67a20e1acd725684f2168\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://46633691888096232cdb06918b2944eafa4d49495e2306fc2e28884e9a917b89\",\"dweb:/ipfs/QmS9sAeRDzWy9rMyd7z8Q5BWT76kgYEEzVpp2dgHr5p5yj\"]},\"src/tokens/ERC721/contractMetadata/ContractMetadataInternal.sol\":{\"keccak256\":\"0xb0b663565bdd0c13bdf9181a7f2a91b672edddb7ac735105879112c8a8f86bcd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://129467e2b99b2c144974ceb5460dc02c551d374ba13cc6cc95622768bce063a9\",\"dweb:/ipfs/QmVtwsf6DCZh5HKKuBpJJM3XMTzv5jMwKZzBLKtoU3xjGj\"]},\"src/tokens/ERC721/contractMetadata/ContractMetadataStorage.sol\":{\"keccak256\":\"0x1dfebbe2c62ea8f7548e3c650ffb9d50965c3cb034bd9cbdd0b2369f125ad71b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2d3f4c69ca9d056696e3dd8da7228624b069f8f72f639d5757d76f09eab32c9e\",\"dweb:/ipfs/QmRkgANNs7yi6HetVWvwU3GL3JCoYA5q3rVNUxLVGEpqjN\"]},\"src/tokens/ERC721/contractMetadata/IContractMetadata.sol\":{\"keccak256\":\"0xd5be120bf459578ea89d8bd8b2bc16b14d20e9b5428b7abefd633c627b193923\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f968d3038523f935e9ccc51bd107daacee352bfd0274e92ab77c6d0a1031dd12\",\"dweb:/ipfs/QmWLQZJG13uhcd6wDPLogNsfnMc9oTzP4UKvQiJ8RH3Mq5\"]},\"src/tokens/ERC721/defaultOperatorFilterer/DefaultOperatorFilterer.sol\":{\"keccak256\":\"0x255e9aeb5f08e4df676796cae21260a25fd134c7ef7839040b0af9eae63e2c01\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c62ef51d449cc70489bcba440331dc9d5fc9b94cee3fe45c7584533ce91707ba\",\"dweb:/ipfs/QmWZjBTduNdy5ArTtETeSq7FW68PG4N6iV5wdySJHQHZW6\"]},\"src/tokens/ERC721/defaultOperatorFilterer/DefaultOperatorFiltererConstants.sol\":{\"keccak256\":\"0x5ebbebc444b873aa2470e71721a0850280cec6eed517d00b0de067c38128290d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6cd8ebd1dddc551a3efadc6cb8fcd1df7498e021a38ae0a2487461a0adf27a88\",\"dweb:/ipfs/QmWK7dqWaZVVfEaGkyAXaSxysQje8UPmexEcAWkvp2UEDy\"]},\"src/tokens/ERC721/defaultOperatorFilterer/DefaultOperatorFiltererInternal.sol\":{\"keccak256\":\"0x1ab27aaaab44558ed280094d80d5fd1057bf13b8f12d01686f097ed169b5a22b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1f1a691206d63ade1c37893d2703b64123cbf8832e714deb38b160001be44f9e\",\"dweb:/ipfs/QmW1JZWBvtUoR3wPxTw7XEJDKzGeCFT15oFHJ3xoF1QFp5\"]},\"src/tokens/ERC721/defaultOperatorFilterer/IDefaultOperatorFilterer.sol\":{\"keccak256\":\"0xc68084d7eafa6b2cda7389ce5edcbe44a606c112bef7cd432a3da41b48a11a0c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4410ff186a62019c937d4d12239f1443ce916ddc766760908511df5abe5a16ae\",\"dweb:/ipfs/QmYYm1C24LoDCvV2AASqczRoURtdkoKm5PP7pcX5Kj6HWf\"]},\"src/tokens/ERC721/mintMetadata/MintMetadata.sol\":{\"keccak256\":\"0xd6822d49dac1499a96caeb892585a8642d2ce89cdebb6224cf7f4330a3e4ce4d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b81edff9bc20a29c4ec12cb251396a916dc65df9cf4cfb0413e287d4898078f3\",\"dweb:/ipfs/QmXp3Li1uaQHZk4vviMWpXg58EnM9AGH9maYenuz1mng5X\"]},\"src/tokens/ERC721/mintMetadata/MintMetadataInternal.sol\":{\"keccak256\":\"0x8921b0a8af6f54f8fa54b4b72430911c12e45d6f253eb81804eca80cc8df344d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c845c0e67fc326c29a76722aa9b51cd74b1fe2f91765c076d7ec3cdc823cfd2a\",\"dweb:/ipfs/QmP8Ry4MhNQwf2zrHfpinByEhki79jquY4NSeLHCaUquXX\"]},\"src/tokens/ERC721/mintMetadata/MintMetadataStorage.sol\":{\"keccak256\":\"0x6b02dfb9854eb07b86276b1fe780d6fc21e59e0d8007b0b7c2dbdb19cf99df16\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b6454184bd5181c8965ca8e1d431f423920d8e6bc32008387f6e90f553bb147e\",\"dweb:/ipfs/QmaR4X7WY3AmC9kW6jazxtvKSwZWCTsw1A5Ur47UNNXaMU\"]},\"src/tokens/ERC721/royalty/IRoyalty.sol\":{\"keccak256\":\"0x310105804ba6e44c816e41f256cf8df63abebf6297b12c630e7e978dfcc3e4cb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ab81711d8fb75ac813dca07e46e4890c4769c23521e61df1c29129ea4cceeee1\",\"dweb:/ipfs/QmZpYGCC1J4oWzNXzvNrvG3sX3SZf98ULBRQBeK8ArEFdB\"]},\"src/tokens/ERC721/royalty/Royalty.sol\":{\"keccak256\":\"0x434a906e8b23fc454a600ccf9e306548e60f7ca91106bf5824427d074f343815\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f79818bb23ade94b4eadb0b099539fef88bce777252e881e10fc05de0a97964f\",\"dweb:/ipfs/QmQhPmfEVZQUVi5aG1wknawNeLqytdo3ngtn96UTb6AuGv\"]},\"src/tokens/ERC721/royalty/RoyaltyInternal.sol\":{\"keccak256\":\"0x6f8bceaa9cfad53006f2c5be4a275d5709a90839696772078332fd643c23aabd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://85b6abb371a14cf85977b2cd7943e99e9ec968de5514f4804422979e842ecfb9\",\"dweb:/ipfs/QmUhdrCmWyH39axtVjTsgQ3huBLMZN2575226swAuziTzr\"]},\"src/tokens/ERC721/royalty/RoyaltyStorage.sol\":{\"keccak256\":\"0xa167c6a9f7ee8ee69b444668cb824ac4e38f1d1f424d0122fae0f7d8d64b399b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ad66618a635ff51c9f6bab587539b2cd0f36932b8e3adfe9b26292fe8fb630c4\",\"dweb:/ipfs/QmXdMAgBLH1hRTMYFdFZfm2aDCjqdb5jfrFQiUE4vVYgs6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC165Base__InvalidInterfaceId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotTransitiveOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "tokenURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "_getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchMintTo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "_royaltyBps",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedOrOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isApprovedOrOwnerOf",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_tokenURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "_getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "approve(address,uint256)": {
            "details": "See {ERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "batchMintTo(address,uint256,string)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.",
            "params": {
              "_baseURI": "The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`",
              "_quantity": "The number of NFTs to mint.",
              "_to": "The recipient of the NFT to mint."
            }
          },
          "burn(uint256)": {
            "details": "ERC721A's `_burn(uint256,bool)` internally checks for token approvals.",
            "params": {
              "_tokenId": "The tokenId of the NFT to burn."
            }
          },
          "contractURI()": {
            "details": "Returns the metadata URI of the contract."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "mintTo(address,string)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.",
            "params": {
              "_to": "The recipient of the NFT to mint.",
              "_tokenURI": "The full metadata URI for the NFT minted."
            }
          },
          "multicall(bytes[])": {
            "params": {
              "data": "array of function call data payloads"
            },
            "returns": {
              "results": "array of function call results"
            }
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "owner()": {
            "returns": {
              "_0": "conrtact owner"
            }
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {ERC721-_safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC721-setApprovalForAll}."
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "override ERC721AUpgradeable to use solidstates ERC165BaseInternal"
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokenURI(uint256)": {
            "details": "See `BatchMintMetadata` for handling of metadata in this contract.",
            "params": {
              "_tokenId": "The tokenId of an NFT."
            }
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {ERC721-_transferFrom}."
          },
          "transferOwnership(address)": {
            "params": {
              "account": "address of new owner"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "_getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "batchMintTo(address,uint256,string)": {
            "notice": "Lets an authorized address mint an NFT to a recipient."
          },
          "burn(uint256)": {
            "notice": "Lets an owner or approved operator burn the NFT of the given tokenId."
          },
          "exists(uint256)": {
            "notice": "Returns whether a given token id has been minted"
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isApprovedOrOwner(address,uint256)": {
            "notice": "Returns whether a given address is the owner, or approved to transfer an NFT."
          },
          "mintTo(address,string)": {
            "notice": "Lets an authorized address mint an NFT to a recipient."
          },
          "multicall(bytes[])": {
            "notice": "batch function calls to the contract and return the results of each"
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId assigned to the next new NFT to be minted."
          },
          "owner()": {
            "notice": "get the ERC173 contract owner"
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "tokenURI(uint256)": {
            "notice": "Returns the metadata URI for an NFT."
          },
          "transferOwnership(address)": {
            "notice": "transfer contract ownership to new account"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        ":@solidstate/=lib/solidstate-solidity/",
        ":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solidstate-solidity/=lib/solidstate-solidity/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/tokens/ERC721/ERC721Base.sol": "ERC721Base"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ERC721A-Upgradeable/contracts/ERC721AStorage.sol": {
        "keccak256": "0x318831b891d003c94fc2a92ed62a1468809f21e5be110fc59798d3c5c4eb2776",
        "urls": [
          "bzz-raw://942d183f09446eb97a176a208a4762fa682e4d78233f17d3d975b79dd29ab632",
          "dweb:/ipfs/Qmer9vswYbG8sv9yZcKxHg9JA7wC3jCrAs33AJPLy8UyqM"
        ],
        "license": "MIT"
      },
      "lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol": {
        "keccak256": "0xe9fea2df3839d1cd69b652418759835e4aafabc67fe4523c365be5d9c6cb42ad",
        "urls": [
          "bzz-raw://0759688156dc5673f6d19aa4b07beead2ae100ffab2743443a45429df384c17e",
          "dweb:/ipfs/Qmf9fRor4GmdarxmnU3HYaQSn3u8WxTsiutYgrHrvm1eT9"
        ],
        "license": "MIT"
      },
      "lib/ERC721A-Upgradeable/contracts/ERC721A__Initializable.sol": {
        "keccak256": "0x4a78c3bccd097e704d6c37cf90af892eae0e3fcb13dcc37e5c1ad6c36f4240f0",
        "urls": [
          "bzz-raw://1b2d1b219b5d96c2224b6badd91845100ee099adfb569dd898d8f305ba247c07",
          "dweb:/ipfs/QmRVNixh5LtNTDdq9aJT3kqPfZjrMmb6CC26fEuUfF61kc"
        ],
        "license": "MIT"
      },
      "lib/ERC721A-Upgradeable/contracts/ERC721A__InitializableStorage.sol": {
        "keccak256": "0x361a8f273736b37718a98049c3f210381c41e4241ff24a36360e417b94ad87b4",
        "urls": [
          "bzz-raw://b50cfd64069938167050defd8e6640ecff6a1687ae79f7b6ffb021f3f65b60f2",
          "dweb:/ipfs/QmZa4ynQofKGCxWvM7QdVcZx3MkY3XAPeKjd65v4QvvxXK"
        ],
        "license": "MIT"
      },
      "lib/ERC721A-Upgradeable/contracts/IERC721AUpgradeable.sol": {
        "keccak256": "0xa8e2bf92476033e48df3911783487b46bcd20f6490a6fdc8c93ca7a0e94bca20",
        "urls": [
          "bzz-raw://3e9c32378e93dc798ff46d6679313fa3a0fbb1be1afd6fa2bef0d1417a77d5c8",
          "dweb:/ipfs/QmVqTn3xKbiUaUyRweDj64r4JDB4RhcMRxpdwc76jcA5gK"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/access/ownable/IOwnable.sol": {
        "keccak256": "0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1",
        "urls": [
          "bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38",
          "dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/access/ownable/IOwnableInternal.sol": {
        "keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
        "urls": [
          "bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
          "dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/access/ownable/Ownable.sol": {
        "keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
        "urls": [
          "bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
          "dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/access/ownable/OwnableInternal.sol": {
        "keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
        "urls": [
          "bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
          "dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/access/ownable/OwnableStorage.sol": {
        "keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
        "urls": [
          "bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
          "dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xc250e493770feaa0da8e5a55d241712c1c6526caa7d8df2455c3e5fa25124c0b",
        "urls": [
          "bzz-raw://768e47d9ddeb15daeab0c8c1109ae43a4c2a0633bd9e4bf141488dfc9252f7ba",
          "dweb:/ipfs/QmWMTTRTncar9LptrxU7WK7WG5hHp8KsYnBGfm3cYowuP8"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC165Internal.sol": {
        "keccak256": "0xc15863a59c442e22b3f5de4e3fa79fffd45dcbe66a9fc18c52b1114c8420e177",
        "urls": [
          "bzz-raw://d81471f1ba8fbb03ce54b3e10478c858cb59cc8557530f326d0e63af122a9039",
          "dweb:/ipfs/QmTfG89JXeWNio2JtL6RpUrX2KZPRa3gAy5KFDU4xk3nMR"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6",
        "urls": [
          "bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555",
          "dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC173Internal.sol": {
        "keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
        "urls": [
          "bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
          "dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC2981.sol": {
        "keccak256": "0x61f10707d54a93c6f75467c12247ac3b07cfea2956b85ae4045f6c58cc56d0c5",
        "urls": [
          "bzz-raw://2f460717c8cae9b359b5697a021098ad35f44ffdf0e0c994d5e367b2d68f1175",
          "dweb:/ipfs/QmPuwfZdoghTR7ghGJLhBvoFJzm3sNRD46FyTGAeHjoNwB"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC2981Internal.sol": {
        "keccak256": "0xa5f4334471e853f25803798f82e6dece96df7bcf7d47a31d4be47d9b553176fb",
        "urls": [
          "bzz-raw://cb4b06ab3f0b1d994ebe6cf3c3b3c4091daa8ae227208033dc3e5860a436e233",
          "dweb:/ipfs/QmfXKqyZM39sitH1PAvWwcaUiDPFZYeBKMktzwQUz4TB1j"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xa14655a5bdee327bc019b583b04480e8542fa6b0788e5569077ec54805d1463a",
        "urls": [
          "bzz-raw://97a0c1c250247373528767dc98a0eeae79a1cf65cdcc95a282cb8cf03336409a",
          "dweb:/ipfs/QmQkwjNyCDCHntjdXTjRY7bQw8ybyQS8ogBQwfTYTypw6G"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC721Internal.sol": {
        "keccak256": "0x8d46d596fa0e48cdcbf8bb8d6a42120351c4d1b002156bf647f95523178cbe08",
        "urls": [
          "bzz-raw://174969541ba4ef63d3a45d9c11556fa60fc70794539d4fd78dd551d7309b0181",
          "dweb:/ipfs/QmdTzThnKwfRD33SepVvZ8WugpiLeknMLgqKNVqunMShFP"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/introspection/ERC165/base/ERC165BaseInternal.sol": {
        "keccak256": "0xba7b4d73d42dfc9f8083ce36aed0fa2c56c73878d8bda7d64f2fb908d5e04636",
        "urls": [
          "bzz-raw://08a4de8e6995d749ecd7f8c4c60a7e242e21cf9d44821fa270566eb3d7ed678d",
          "dweb:/ipfs/QmPNgKhBsv7PieDUR8Jvb4LkC57zt82jguw8QmuJ3J4UBG"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/introspection/ERC165/base/ERC165BaseStorage.sol": {
        "keccak256": "0xfd1cfba40f8aabda5898ffe21adeeea8c7011da12bfdad7f7aa0cf87b3635653",
        "urls": [
          "bzz-raw://6b80596a94faae265ecd9e03875ccebf5c1e45d94d8119dcf04e3a1cd92f5fb6",
          "dweb:/ipfs/QmVK8xje6PeEwVoZfFcugAdy43kLx59D9UHr4m8Qu9GgV9"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/introspection/ERC165/base/IERC165BaseInternal.sol": {
        "keccak256": "0xccda4b118c8c09c276a0e577168aa404ea6207aad6b384b04f5f3a8923316422",
        "urls": [
          "bzz-raw://dcbafa161920a2a39ac001c76ee166ae4b345bef3ee6a0c5ca505504c0e9c052",
          "dweb:/ipfs/QmTF3DPJQPLsiYTmGNZXGBkmVRs14g2bUb1QJDH4ywwMq5"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/utils/AddressUtils.sol": {
        "keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
        "urls": [
          "bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
          "dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/utils/IMulticall.sol": {
        "keccak256": "0x39e630bc189607ae119c1208a632009fe418cc4eb2687b28e7fdbe78af7b79b0",
        "urls": [
          "bzz-raw://5afde99ff69a2e02fb24b6895b629de612547643dc119d01bf9937cad5452e0b",
          "dweb:/ipfs/QmR9WDSqAeNxRnju4XBUsRmN6TdgoATp9hcoC1kSDnVuZX"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/utils/Multicall.sol": {
        "keccak256": "0x762f15ac4c28be19d0d7fb303ade8dea6ba52ff558fb6fba36df84a839e216b3",
        "urls": [
          "bzz-raw://394c7fbb2b8e6d62b6e9e78124ef327a59c3d5fec21119fee2c153e2517e2986",
          "dweb:/ipfs/QmdDuVFLAxEPqjtBfWTeXhov6Nzjh7eG35YZsricP5jQkw"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/utils/UintUtils.sol": {
        "keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
        "urls": [
          "bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
          "dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
        ],
        "license": "MIT"
      },
      "src/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0x55f71e0f3f2a97059861659ed28c37c0155ede7bf7aab5eec563720c8ffa983a",
        "urls": [
          "bzz-raw://252bfb07a2d658afa4d18a016393b6b064355c7ba866baf70b7be92f2086e6f3",
          "dweb:/ipfs/QmbM3eWURAGjd5rKVkmdNQf4X8PXSUopWed5sJYbpNdbof"
        ],
        "license": "MIT"
      },
      "src/tokens/ERC721/ERC721Base.sol": {
        "keccak256": "0x26a8643342f20392fff1e7d3f6f1d76ee55aa57bf838c6d96e61e0261737c018",
        "urls": [
          "bzz-raw://d33edb7fba2147b2bb7a51d222399c939139d6ba78a06951e49d272184ae47be",
          "dweb:/ipfs/QmWbJsSA1rrFcm2aovmobMXiMHn7wanA72pJFssvz4Zzt4"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/batchMintMetadata/BatchMintMetadata.sol": {
        "keccak256": "0xe37cc9ebcc3268bc571ee48a419f7dc93490d40cbf9cf65e486df04334413e69",
        "urls": [
          "bzz-raw://01e6d177bd5146ef3c6b7a483a1983f8ff03eeb9c9f41ab0a04d59e025933f24",
          "dweb:/ipfs/QmXUdFosrctrEVB29B4EC68RQfpp1ZsfRV5zoF65vWJTRZ"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/batchMintMetadata/BatchMintMetadataInternal.sol": {
        "keccak256": "0x851dd41b9808ac6b5c5de639f1ed71030370b18bb1e8fb5912933627c4a21c87",
        "urls": [
          "bzz-raw://4160556dc6efb4b0583835b709fd21d0012f75828e78231d6c6097892c6b37cf",
          "dweb:/ipfs/QmWEKbA3VdvjLsnDiSVCZM94VoNQeyk1nHxjuXGRUyJwUs"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/batchMintMetadata/BatchMintMetadataStorage.sol": {
        "keccak256": "0x39fb91ee60db2e0a3bd0a847a590b78f5df3c3977852d7257bfb16091f546118",
        "urls": [
          "bzz-raw://f48467de13379e1ef3f9cd223831b3cb1995ad6e19e77cc960f4e515e23a32f9",
          "dweb:/ipfs/QmesnpNhohfbG6QAu6E5CkM7LSUZGxcct4yLGeGQyiQyno"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/batchMintMetadata/IBatchMintMetadata.sol": {
        "keccak256": "0xc778cb2150136c9375a7d6d604ff47b394c235a8e57897c99cf89ad567550f57",
        "urls": [
          "bzz-raw://5a1f946e48a409045942898dddda8866c8ed52071c346577cd3f433a1df6a45f",
          "dweb:/ipfs/QmbMBDwDn4oyVM8uwqZe7ux647NaAogEQMNZAptmy2rqs5"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/contractMetadata/ContractMetadata.sol": {
        "keccak256": "0xf9b1229a45909e915ef12af800328118db1c595aaef67a20e1acd725684f2168",
        "urls": [
          "bzz-raw://46633691888096232cdb06918b2944eafa4d49495e2306fc2e28884e9a917b89",
          "dweb:/ipfs/QmS9sAeRDzWy9rMyd7z8Q5BWT76kgYEEzVpp2dgHr5p5yj"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/contractMetadata/ContractMetadataInternal.sol": {
        "keccak256": "0xb0b663565bdd0c13bdf9181a7f2a91b672edddb7ac735105879112c8a8f86bcd",
        "urls": [
          "bzz-raw://129467e2b99b2c144974ceb5460dc02c551d374ba13cc6cc95622768bce063a9",
          "dweb:/ipfs/QmVtwsf6DCZh5HKKuBpJJM3XMTzv5jMwKZzBLKtoU3xjGj"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/contractMetadata/ContractMetadataStorage.sol": {
        "keccak256": "0x1dfebbe2c62ea8f7548e3c650ffb9d50965c3cb034bd9cbdd0b2369f125ad71b",
        "urls": [
          "bzz-raw://2d3f4c69ca9d056696e3dd8da7228624b069f8f72f639d5757d76f09eab32c9e",
          "dweb:/ipfs/QmRkgANNs7yi6HetVWvwU3GL3JCoYA5q3rVNUxLVGEpqjN"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/contractMetadata/IContractMetadata.sol": {
        "keccak256": "0xd5be120bf459578ea89d8bd8b2bc16b14d20e9b5428b7abefd633c627b193923",
        "urls": [
          "bzz-raw://f968d3038523f935e9ccc51bd107daacee352bfd0274e92ab77c6d0a1031dd12",
          "dweb:/ipfs/QmWLQZJG13uhcd6wDPLogNsfnMc9oTzP4UKvQiJ8RH3Mq5"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/defaultOperatorFilterer/DefaultOperatorFilterer.sol": {
        "keccak256": "0x255e9aeb5f08e4df676796cae21260a25fd134c7ef7839040b0af9eae63e2c01",
        "urls": [
          "bzz-raw://c62ef51d449cc70489bcba440331dc9d5fc9b94cee3fe45c7584533ce91707ba",
          "dweb:/ipfs/QmWZjBTduNdy5ArTtETeSq7FW68PG4N6iV5wdySJHQHZW6"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/defaultOperatorFilterer/DefaultOperatorFiltererConstants.sol": {
        "keccak256": "0x5ebbebc444b873aa2470e71721a0850280cec6eed517d00b0de067c38128290d",
        "urls": [
          "bzz-raw://6cd8ebd1dddc551a3efadc6cb8fcd1df7498e021a38ae0a2487461a0adf27a88",
          "dweb:/ipfs/QmWK7dqWaZVVfEaGkyAXaSxysQje8UPmexEcAWkvp2UEDy"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/defaultOperatorFilterer/DefaultOperatorFiltererInternal.sol": {
        "keccak256": "0x1ab27aaaab44558ed280094d80d5fd1057bf13b8f12d01686f097ed169b5a22b",
        "urls": [
          "bzz-raw://1f1a691206d63ade1c37893d2703b64123cbf8832e714deb38b160001be44f9e",
          "dweb:/ipfs/QmW1JZWBvtUoR3wPxTw7XEJDKzGeCFT15oFHJ3xoF1QFp5"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/defaultOperatorFilterer/IDefaultOperatorFilterer.sol": {
        "keccak256": "0xc68084d7eafa6b2cda7389ce5edcbe44a606c112bef7cd432a3da41b48a11a0c",
        "urls": [
          "bzz-raw://4410ff186a62019c937d4d12239f1443ce916ddc766760908511df5abe5a16ae",
          "dweb:/ipfs/QmYYm1C24LoDCvV2AASqczRoURtdkoKm5PP7pcX5Kj6HWf"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/mintMetadata/MintMetadata.sol": {
        "keccak256": "0xd6822d49dac1499a96caeb892585a8642d2ce89cdebb6224cf7f4330a3e4ce4d",
        "urls": [
          "bzz-raw://b81edff9bc20a29c4ec12cb251396a916dc65df9cf4cfb0413e287d4898078f3",
          "dweb:/ipfs/QmXp3Li1uaQHZk4vviMWpXg58EnM9AGH9maYenuz1mng5X"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/mintMetadata/MintMetadataInternal.sol": {
        "keccak256": "0x8921b0a8af6f54f8fa54b4b72430911c12e45d6f253eb81804eca80cc8df344d",
        "urls": [
          "bzz-raw://c845c0e67fc326c29a76722aa9b51cd74b1fe2f91765c076d7ec3cdc823cfd2a",
          "dweb:/ipfs/QmP8Ry4MhNQwf2zrHfpinByEhki79jquY4NSeLHCaUquXX"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/mintMetadata/MintMetadataStorage.sol": {
        "keccak256": "0x6b02dfb9854eb07b86276b1fe780d6fc21e59e0d8007b0b7c2dbdb19cf99df16",
        "urls": [
          "bzz-raw://b6454184bd5181c8965ca8e1d431f423920d8e6bc32008387f6e90f553bb147e",
          "dweb:/ipfs/QmaR4X7WY3AmC9kW6jazxtvKSwZWCTsw1A5Ur47UNNXaMU"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/royalty/IRoyalty.sol": {
        "keccak256": "0x310105804ba6e44c816e41f256cf8df63abebf6297b12c630e7e978dfcc3e4cb",
        "urls": [
          "bzz-raw://ab81711d8fb75ac813dca07e46e4890c4769c23521e61df1c29129ea4cceeee1",
          "dweb:/ipfs/QmZpYGCC1J4oWzNXzvNrvG3sX3SZf98ULBRQBeK8ArEFdB"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/royalty/Royalty.sol": {
        "keccak256": "0x434a906e8b23fc454a600ccf9e306548e60f7ca91106bf5824427d074f343815",
        "urls": [
          "bzz-raw://f79818bb23ade94b4eadb0b099539fef88bce777252e881e10fc05de0a97964f",
          "dweb:/ipfs/QmQhPmfEVZQUVi5aG1wknawNeLqytdo3ngtn96UTb6AuGv"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/royalty/RoyaltyInternal.sol": {
        "keccak256": "0x6f8bceaa9cfad53006f2c5be4a275d5709a90839696772078332fd643c23aabd",
        "urls": [
          "bzz-raw://85b6abb371a14cf85977b2cd7943e99e9ec968de5514f4804422979e842ecfb9",
          "dweb:/ipfs/QmUhdrCmWyH39axtVjTsgQ3huBLMZN2575226swAuziTzr"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC721/royalty/RoyaltyStorage.sol": {
        "keccak256": "0xa167c6a9f7ee8ee69b444668cb824ac4e38f1d1f424d0122fae0f7d8d64b399b",
        "urls": [
          "bzz-raw://ad66618a635ff51c9f6bab587539b2cd0f36932b8e3adfe9b26292fe8fb630c4",
          "dweb:/ipfs/QmXdMAgBLH1hRTMYFdFZfm2aDCjqdb5jfrFQiUE4vVYgs6"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/tokens/ERC721/ERC721Base.sol",
    "id": 34159,
    "exportedSymbols": {
      "BatchMintMetadata": [34221],
      "ContractMetadata": [34552],
      "DEFAULT_SUBSCRIPTION": [34705],
      "DefaultOperatorFilterer": [34692],
      "ERC165BaseInternal": [29515],
      "ERC721AUpgradeable": [1892],
      "ERC721Base": [34158],
      "IContractMetadata": [34653],
      "IERC165": [29248],
      "IERC2981": [29308],
      "IERC721": [29406],
      "MintMetadata": [34832],
      "Multicall": [31907],
      "Ownable": [28775],
      "Royalty": [35102],
      "UintUtils": [32163]
    },
    "nodeType": "SourceUnit",
    "src": "39:8731:92",
    "nodes": [
      {
        "id": 33673,
        "nodeType": "PragmaDirective",
        "src": "39:24:92",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".16"]
      },
      {
        "id": 33675,
        "nodeType": "ImportDirective",
        "src": "65:69:92",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/interfaces/IERC165.sol",
        "file": "@solidstate/contracts/interfaces/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34159,
        "sourceUnit": 29249,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33674,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29248,
              "src": "73:7:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33677,
        "nodeType": "ImportDirective",
        "src": "135:69:92",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/interfaces/IERC721.sol",
        "file": "@solidstate/contracts/interfaces/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34159,
        "sourceUnit": 29407,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33676,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29406,
              "src": "143:7:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33679,
        "nodeType": "ImportDirective",
        "src": "205:71:92",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/interfaces/IERC2981.sol",
        "file": "@solidstate/contracts/interfaces/IERC2981.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34159,
        "sourceUnit": 29309,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33678,
              "name": "IERC2981",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29308,
              "src": "213:8:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33681,
        "nodeType": "ImportDirective",
        "src": "277:73:92",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/access/ownable/Ownable.sol",
        "file": "@solidstate/contracts/access/ownable/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34159,
        "sourceUnit": 28776,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33680,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28775,
              "src": "285:7:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33683,
        "nodeType": "ImportDirective",
        "src": "351:68:92",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/utils/Multicall.sol",
        "file": "@solidstate/contracts/utils/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34159,
        "sourceUnit": 31908,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33682,
              "name": "Multicall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31907,
              "src": "359:9:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33685,
        "nodeType": "ImportDirective",
        "src": "420:106:92",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
        "file": "@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34159,
        "sourceUnit": 29516,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33684,
              "name": "ERC165BaseInternal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29515,
              "src": "428:18:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33687,
        "nodeType": "ImportDirective",
        "src": "527:68:92",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/utils/UintUtils.sol",
        "file": "@solidstate/contracts/utils/UintUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34159,
        "sourceUnit": 32164,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33686,
              "name": "UintUtils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32163,
              "src": "535:9:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33689,
        "nodeType": "ImportDirective",
        "src": "597:89:92",
        "nodes": [],
        "absolutePath": "lib/ERC721A-Upgradeable/contracts/ERC721AUpgradeable.sol",
        "file": "@erc721a-upgradeable/contracts/ERC721AUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34159,
        "sourceUnit": 1893,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33688,
              "name": "ERC721AUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1892,
              "src": "605:18:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33691,
        "nodeType": "ImportDirective",
        "src": "688:46:92",
        "nodes": [],
        "absolutePath": "src/tokens/ERC721/royalty/Royalty.sol",
        "file": "./royalty/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34159,
        "sourceUnit": 35103,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33690,
              "name": "Royalty",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35102,
              "src": "696:7:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33693,
        "nodeType": "ImportDirective",
        "src": "735:61:92",
        "nodes": [],
        "absolutePath": "src/tokens/ERC721/mintMetadata/MintMetadata.sol",
        "file": "./mintMetadata/MintMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34159,
        "sourceUnit": 34833,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33692,
              "name": "MintMetadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34832,
              "src": "743:12:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33695,
        "nodeType": "ImportDirective",
        "src": "797:76:92",
        "nodes": [],
        "absolutePath": "src/tokens/ERC721/batchMintMetadata/BatchMintMetadata.sol",
        "file": "./batchMintMetadata/BatchMintMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34159,
        "sourceUnit": 34222,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33694,
              "name": "BatchMintMetadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34221,
              "src": "805:17:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33698,
        "nodeType": "ImportDirective",
        "src": "874:92:92",
        "nodes": [],
        "absolutePath": "src/tokens/ERC721/contractMetadata/ContractMetadata.sol",
        "file": "./contractMetadata/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34159,
        "sourceUnit": 34553,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33696,
              "name": "ContractMetadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34552,
              "src": "882:16:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 33697,
              "name": "IContractMetadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34653,
              "src": "900:17:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33701,
        "nodeType": "ImportDirective",
        "src": "967:116:92",
        "nodes": [],
        "absolutePath": "src/tokens/ERC721/defaultOperatorFilterer/DefaultOperatorFilterer.sol",
        "file": "./defaultOperatorFilterer/DefaultOperatorFilterer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34159,
        "sourceUnit": 34693,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33699,
              "name": "DefaultOperatorFilterer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34692,
              "src": "975:23:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 33700,
              "name": "DEFAULT_SUBSCRIPTION",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34705,
              "src": "1000:20:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34158,
        "nodeType": "ContractDefinition",
        "src": "1085:7684:92",
        "nodes": [
          {
            "id": 33725,
            "nodeType": "EventDefinition",
            "src": "1294:42:92",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "0c1b180fbb60448c5491c5ddc7c3a923854214b9ff70f90a7821333338971f92",
            "name": "Minted",
            "nameLocation": "1300:6:92",
            "parameters": {
              "id": 33724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33721,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1315:2:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33725,
                  "src": "1307:10:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33723,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "1326:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33725,
                  "src": "1319:15:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33722,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:29:92"
            }
          },
          {
            "id": 33733,
            "nodeType": "EventDefinition",
            "src": "1341:64:92",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "5443e3e7d8342ad07aca2b5d0e1679e55e0fb2c09df232251ce9acbb22c75465",
            "name": "BatchMinted",
            "nameLocation": "1347:11:92",
            "parameters": {
              "id": 33732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33727,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1367:2:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33733,
                  "src": "1359:10:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33729,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "1379:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33733,
                  "src": "1371:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33731,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "1396:7:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33733,
                  "src": "1389:14:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33730,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1358:46:92"
            }
          },
          {
            "id": 33804,
            "nodeType": "FunctionDefinition",
            "src": "1411:730:92",
            "nodes": [],
            "body": {
              "id": 33803,
              "nodeType": "Block",
              "src": "1568:573:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33747,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33735,
                        "src": "1593:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 33748,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33737,
                        "src": "1600:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 33746,
                      "name": "__ERC721A_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "1578:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 33749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1578:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33750,
                  "nodeType": "ExpressionStatement",
                  "src": "1578:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33752,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1628:3:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1632:6:92",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1628:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33751,
                      "name": "_setOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28898,
                      "src": "1618:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1618:21:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33755,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:21:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33757,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33739,
                        "src": "1672:17:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33758,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33741,
                        "src": "1691:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 33756,
                      "name": "_setDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35157,
                      "src": "1649:22:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 33759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:54:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33760,
                  "nodeType": "ExpressionStatement",
                  "src": "1649:54:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33762,
                        "name": "DEFAULT_SUBSCRIPTION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34705,
                        "src": "1748:20:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1770:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33761,
                      "name": "_registerToDefaultOperatorFilterer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34783,
                      "src": "1713:34:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 33764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1713:62:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33765,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:62:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33768,
                              "name": "IERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29248,
                              "src": "1813:7:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC165_$29248_$",
                                "typeString": "type(contract IERC165)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC165_$29248_$",
                                "typeString": "type(contract IERC165)"
                              }
                            ],
                            "id": 33767,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1808:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 33769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1808:13:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$29248",
                            "typeString": "type(contract IERC165)"
                          }
                        },
                        "id": 33770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1822:11:92",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "1808:25:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1835:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33766,
                      "name": "_setSupportsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29514,
                      "src": "1786:21:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
                        "typeString": "function (bytes4,bool)"
                      }
                    },
                    "id": 33772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1786:54:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33773,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:54:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33776,
                              "name": "IERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29406,
                              "src": "1877:7:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$29406_$",
                                "typeString": "type(contract IERC721)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$29406_$",
                                "typeString": "type(contract IERC721)"
                              }
                            ],
                            "id": 33775,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1872:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 33777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1872:13:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$29406",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 33778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1886:11:92",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "1872:25:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1899:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33774,
                      "name": "_setSupportsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29514,
                      "src": "1850:21:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
                        "typeString": "function (bytes4,bool)"
                      }
                    },
                    "id": 33780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1850:54:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33781,
                  "nodeType": "ExpressionStatement",
                  "src": "1850:54:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30783562356531333966",
                        "id": 33783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1936:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1948:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33782,
                      "name": "_setSupportsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29514,
                      "src": "1914:21:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
                        "typeString": "function (bytes4,bool)"
                      }
                    },
                    "id": 33785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1914:39:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33786,
                  "nodeType": "ExpressionStatement",
                  "src": "1914:39:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33789,
                              "name": "IERC2981",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29308,
                              "src": "2032:8:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$29308_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$29308_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            ],
                            "id": 33788,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2027:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 33790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2027:14:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$29308",
                            "typeString": "type(contract IERC2981)"
                          }
                        },
                        "id": 33791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2042:11:92",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2027:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2055:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33787,
                      "name": "_setSupportsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29514,
                      "src": "2005:21:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
                        "typeString": "function (bytes4,bool)"
                      }
                    },
                    "id": 33793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:55:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33794,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:55:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33797,
                              "name": "IContractMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34653,
                              "src": "2097:17:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IContractMetadata_$34653_$",
                                "typeString": "type(contract IContractMetadata)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IContractMetadata_$34653_$",
                                "typeString": "type(contract IContractMetadata)"
                              }
                            ],
                            "id": 33796,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2092:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 33798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2092:23:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IContractMetadata_$34653",
                            "typeString": "type(contract IContractMetadata)"
                          }
                        },
                        "id": 33799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2116:11:92",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2092:35:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2129:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33795,
                      "name": "_setSupportsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29514,
                      "src": "2070:21:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
                        "typeString": "function (bytes4,bool)"
                      }
                    },
                    "id": 33801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2070:64:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33802,
                  "nodeType": "ExpressionStatement",
                  "src": "2070:64:92"
                }
              ]
            },
            "functionSelector": "5881bfc1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 33744,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 33743,
                  "name": "initializerERC721A",
                  "nameLocations": ["1545:18:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1959,
                  "src": "1545:18:92"
                },
                "nodeType": "ModifierInvocation",
                "src": "1545:18:92"
              }
            ],
            "name": "initialize",
            "nameLocation": "1420:10:92",
            "parameters": {
              "id": 33742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33735,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1445:5:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33804,
                  "src": "1431:19:92",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33734,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33737,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1466:7:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33804,
                  "src": "1452:21:92",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33736,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33739,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "1483:17:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33804,
                  "src": "1475:25:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33741,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "1509:11:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33804,
                  "src": "1502:18:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 33740,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1502:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1430:91:92"
            },
            "returnParameters": {
              "id": 33745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1568:0:92"
            },
            "scope": 34158,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33820,
            "nodeType": "FunctionDefinition",
            "src": "2422:167:92",
            "nodes": [],
            "body": {
              "id": 33819,
              "nodeType": "Block",
              "src": "2534:55:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33816,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33807,
                        "src": "2570:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 33815,
                      "name": "_supportsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29488,
                      "src": "2551:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 33817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2551:31:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 33814,
                  "id": 33818,
                  "nodeType": "Return",
                  "src": "2544:38:92"
                }
              ]
            },
            "baseFunctions": [425, 29247],
            "documentation": {
              "id": 33805,
              "nodeType": "StructuredDocumentation",
              "src": "2327:89:92",
              "text": " @dev override ERC721AUpgradeable to use solidstates ERC165BaseInternal"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2431:17:92",
            "overrides": {
              "id": 33811,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 33809,
                  "name": "ERC721AUpgradeable",
                  "nameLocations": ["2490:18:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1892,
                  "src": "2490:18:92"
                },
                {
                  "id": 33810,
                  "name": "IERC165",
                  "nameLocations": ["2510:7:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29248,
                  "src": "2510:7:92"
                }
              ],
              "src": "2481:37:92"
            },
            "parameters": {
              "id": 33808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33807,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2456:11:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33820,
                  "src": "2449:18:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 33806,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2448:20:92"
            },
            "returnParameters": {
              "id": 33814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33813,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33820,
                  "src": "2528:4:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2528:4:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2527:6:92"
            },
            "scope": 34158,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33863,
            "nodeType": "FunctionDefinition",
            "src": "3004:466:92",
            "nodes": [],
            "body": {
              "id": 33862,
              "nodeType": "Block",
              "src": "3093:377:92",
              "nodes": [],
              "statements": [
                {
                  "assignments": [33830],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33830,
                      "mutability": "mutable",
                      "name": "fullTokenURI",
                      "nameLocation": "3161:12:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 33862,
                      "src": "3147:26:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 33829,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3147:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33834,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33832,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33823,
                        "src": "3189:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33831,
                      "name": "_getTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34852,
                      "src": "3176:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 33833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3176:22:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3147:51:92"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 33837,
                            "name": "fullTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33830,
                            "src": "3218:12:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 33836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3212:5:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 33835,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3212:5:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3212:19:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 33839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3232:6:92",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3212:26:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 33840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3241:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3212:30:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33845,
                  "nodeType": "IfStatement",
                  "src": "3208:80:92",
                  "trueBody": {
                    "id": 33844,
                    "nodeType": "Block",
                    "src": "3244:44:92",
                    "statements": [
                      {
                        "expression": {
                          "id": 33842,
                          "name": "fullTokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33830,
                          "src": "3265:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 33828,
                        "id": 33843,
                        "nodeType": "Return",
                        "src": "3258:19:92"
                      }
                    ]
                  }
                },
                {
                  "assignments": [33847],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33847,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "3361:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 33862,
                      "src": "3347:22:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 33846,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3347:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33851,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33849,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33823,
                        "src": "3384:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33848,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34389,
                      "src": "3372:11:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 33850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3372:21:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3347:46:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33855,
                        "name": "batchUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33847,
                        "src": "3424:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33858,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33823,
                            "src": "3453:8:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 33856,
                            "name": "UintUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32163,
                            "src": "3434:9:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_UintUtils_$32163_$",
                              "typeString": "type(library UintUtils)"
                            }
                          },
                          "id": 33857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3444:8:92",
                          "memberName": "toString",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32045,
                          "src": "3434:18:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 33859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3434:28:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 33853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3410:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 33852,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3410:6:92",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 33854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3417:6:92",
                      "memberName": "concat",
                      "nodeType": "MemberAccess",
                      "src": "3410:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () pure returns (string memory)"
                      }
                    },
                    "id": 33860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3410:53:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 33828,
                  "id": 33861,
                  "nodeType": "Return",
                  "src": "3403:60:92"
                }
              ]
            },
            "baseFunctions": [494],
            "documentation": {
              "id": 33821,
              "nodeType": "StructuredDocumentation",
              "src": "2782:217:92",
              "text": "  @notice         Returns the metadata URI for an NFT.\n  @dev            See `BatchMintMetadata` for handling of metadata in this contract.\n  @param _tokenId The tokenId of an NFT."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3013:8:92",
            "overrides": {
              "id": 33825,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3060:8:92"
            },
            "parameters": {
              "id": 33824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33823,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3030:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33863,
                  "src": "3022:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3022:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3021:18:92"
            },
            "returnParameters": {
              "id": 33828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33827,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33863,
                  "src": "3078:13:92",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33826,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3078:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3077:15:92"
            },
            "scope": 34158,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 33894,
            "nodeType": "FunctionDefinition",
            "src": "4006:247:92",
            "nodes": [],
            "body": {
              "id": 33893,
              "nodeType": "Block",
              "src": "4075:178:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 33872,
                          "name": "_canMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34129,
                          "src": "4093:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 33873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4093:10:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f206d696e742e",
                        "id": 33874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4105:25:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        },
                        "value": "Not authorized to mint."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        }
                      ],
                      "id": 33871,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4085:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4085:46:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33876,
                  "nodeType": "ExpressionStatement",
                  "src": "4085:46:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 33878,
                          "name": "_nextTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "4155:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 33879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4155:14:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33880,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33868,
                        "src": "4171:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 33877,
                      "name": "_mintMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34892,
                      "src": "4141:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 33881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4141:40:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33882,
                  "nodeType": "ExpressionStatement",
                  "src": "4141:40:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33884,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33866,
                        "src": "4201:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 33885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4206:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 33883,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [1506, 1521],
                      "referencedDeclaration": 1521,
                      "src": "4191:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 33886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4191:17:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33887,
                  "nodeType": "ExpressionStatement",
                  "src": "4191:17:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33889,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33866,
                        "src": "4231:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33890,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33868,
                        "src": "4236:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 33888,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33725,
                      "src": "4224:6:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 33891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4224:22:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33892,
                  "nodeType": "EmitStatement",
                  "src": "4219:27:92"
                }
              ]
            },
            "documentation": {
              "id": 33864,
              "nodeType": "StructuredDocumentation",
              "src": "3657:344:92",
              "text": "  @notice          Lets an authorized address mint an NFT to a recipient.\n  @dev             The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\n  @param _to       The recipient of the NFT to mint.\n  @param _tokenURI The full metadata URI for the NFT minted."
            },
            "functionSelector": "0075a317",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "4015:6:92",
            "parameters": {
              "id": 33869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33866,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4030:3:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33894,
                  "src": "4022:11:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4022:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33868,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "4049:9:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33894,
                  "src": "4035:23:92",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33867,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4035:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4021:38:92"
            },
            "returnParameters": {
              "id": 33870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4075:0:92"
            },
            "scope": 34158,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 33929,
            "nodeType": "FunctionDefinition",
            "src": "4714:308:92",
            "nodes": [],
            "body": {
              "id": 33928,
              "nodeType": "Block",
              "src": "4806:216:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 33905,
                          "name": "_canMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34129,
                          "src": "4824:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 33906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4824:10:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f206d696e742e",
                        "id": 33907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4836:25:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        },
                        "value": "Not authorized to mint."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        }
                      ],
                      "id": 33904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4816:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4816:46:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33909,
                  "nodeType": "ExpressionStatement",
                  "src": "4816:46:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 33911,
                          "name": "_nextTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "4891:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 33912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4891:14:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33913,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33899,
                        "src": "4907:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33914,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33901,
                        "src": "4918:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 33910,
                      "name": "_batchMintMetadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34458,
                      "src": "4872:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) returns (uint256,uint256)"
                      }
                    },
                    "id": 33915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4872:55:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 33916,
                  "nodeType": "ExpressionStatement",
                  "src": "4872:55:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33918,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33897,
                        "src": "4947:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33919,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33899,
                        "src": "4952:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33917,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [1506, 1521],
                      "referencedDeclaration": 1521,
                      "src": "4937:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 33920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4937:25:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33921,
                  "nodeType": "ExpressionStatement",
                  "src": "4937:25:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33923,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33897,
                        "src": "4990:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33924,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33899,
                        "src": "4995:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33925,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33901,
                        "src": "5006:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 33922,
                      "name": "BatchMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33733,
                      "src": "4978:11:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 33926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4978:37:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33927,
                  "nodeType": "EmitStatement",
                  "src": "4973:42:92"
                }
              ]
            },
            "documentation": {
              "id": 33895,
              "nodeType": "StructuredDocumentation",
              "src": "4259:449:92",
              "text": "  @notice          Lets an authorized address mint an NFT to a recipient.\n  @dev             The logic in the `_canMint` function determines whether the caller is authorized to mint NFTs.\n  @param _to       The recipient of the NFT to mint.\n  @param _quantity The number of NFTs to mint.\n  @param _baseURI  The baseURI for the `n` number of NFTs minted. The metadata for each NFT is `baseURI/tokenId`"
            },
            "functionSelector": "5003c7c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchMintTo",
            "nameLocation": "4723:11:92",
            "parameters": {
              "id": 33902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33897,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4743:3:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33929,
                  "src": "4735:11:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4735:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33899,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "4756:9:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33929,
                  "src": "4748:17:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4748:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33901,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "4781:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33929,
                  "src": "4767:22:92",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33900,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4767:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4734:56:92"
            },
            "returnParameters": {
              "id": 33903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4806:0:92"
            },
            "scope": 34158,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 33941,
            "nodeType": "FunctionDefinition",
            "src": "5297:87:92",
            "nodes": [],
            "body": {
              "id": 33940,
              "nodeType": "Block",
              "src": "5346:38:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33936,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33932,
                        "src": "5362:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5372:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33935,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [1600, 1774],
                      "referencedDeclaration": 1774,
                      "src": "5356:5:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 33938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5356:21:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33939,
                  "nodeType": "ExpressionStatement",
                  "src": "5356:21:92"
                }
              ]
            },
            "documentation": {
              "id": 33930,
              "nodeType": "StructuredDocumentation",
              "src": "5028:263:92",
              "text": "  @notice         Lets an owner or approved operator burn the NFT of the given tokenId.\n  @dev            ERC721A's `_burn(uint256,bool)` internally checks for token approvals.\n  @param _tokenId The tokenId of the NFT to burn."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "5306:4:92",
            "parameters": {
              "id": 33933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33932,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5319:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33941,
                  "src": "5311:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5311:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5310:18:92"
            },
            "returnParameters": {
              "id": 33934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5346:0:92"
            },
            "scope": 34158,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 33951,
            "nodeType": "FunctionDefinition",
            "src": "5639:105:92",
            "nodes": [],
            "body": {
              "id": 33950,
              "nodeType": "Block",
              "src": "5706:38:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 33947,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "5723:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 33948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5723:14:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33946,
                  "id": 33949,
                  "nodeType": "Return",
                  "src": "5716:21:92"
                }
              ]
            },
            "documentation": {
              "id": 33942,
              "nodeType": "StructuredDocumentation",
              "src": "5568:66:92",
              "text": "@notice The tokenId assigned to the next new NFT to be minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "5648:17:92",
            "parameters": {
              "id": 33943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5665:2:92"
            },
            "returnParameters": {
              "id": 33946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33945,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33951,
                  "src": "5697:7:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5697:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5696:9:92"
            },
            "scope": 34158,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 33986,
            "nodeType": "FunctionDefinition",
            "src": "5844:345:92",
            "nodes": [],
            "body": {
              "id": 33985,
              "nodeType": "Block",
              "src": "5999:190:92",
              "nodes": [],
              "statements": [
                {
                  "assignments": [33962],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33962,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6017:5:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 33985,
                      "src": "6009:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33961,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6009:7:92",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33966,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33964,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33956,
                        "src": "6033:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33963,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 523,
                      "src": "6025:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 33965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6025:17:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6009:33:92"
                },
                {
                  "expression": {
                    "id": 33983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33967,
                      "name": "isApprovedOrOwnerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33959,
                      "src": "6052:19:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 33981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 33975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 33970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33968,
                                "name": "_operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33954,
                                "src": "6087:9:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 33969,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33962,
                                "src": "6100:5:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6087:18:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 33972,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33962,
                                  "src": "6126:5:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 33973,
                                  "name": "_operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33954,
                                  "src": "6133:9:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 33971,
                                "name": "isApprovedForAll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 827,
                                "src": "6109:16:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 33974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6109:34:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6087:56:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 33980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 33977,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33956,
                                  "src": "6159:8:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 33976,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "6147:11:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 33978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6147:21:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 33979,
                              "name": "_operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33954,
                              "src": "6172:9:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6147:34:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6087:94:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 33982,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6086:96:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6052:130:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33984,
                  "nodeType": "ExpressionStatement",
                  "src": "6052:130:92"
                }
              ]
            },
            "documentation": {
              "id": 33952,
              "nodeType": "StructuredDocumentation",
              "src": "5750:89:92",
              "text": "@notice Returns whether a given address is the owner, or approved to transfer an NFT."
            },
            "functionSelector": "430c2081",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedOrOwner",
            "nameLocation": "5853:17:92",
            "parameters": {
              "id": 33957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33954,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "5879:9:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33986,
                  "src": "5871:17:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5871:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33956,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5898:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33986,
                  "src": "5890:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5890:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5870:37:92"
            },
            "returnParameters": {
              "id": 33960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33959,
                  "mutability": "mutable",
                  "name": "isApprovedOrOwnerOf",
                  "nameLocation": "5974:19:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33986,
                  "src": "5969:24:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33958,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5969:4:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5968:26:92"
            },
            "scope": 34158,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 33999,
            "nodeType": "FunctionDefinition",
            "src": "6260:107:92",
            "nodes": [],
            "body": {
              "id": 33998,
              "nodeType": "Block",
              "src": "6326:41:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33995,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33989,
                        "src": "6351:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33994,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 859,
                      "src": "6343:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 33996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6343:17:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 33993,
                  "id": 33997,
                  "nodeType": "Return",
                  "src": "6336:24:92"
                }
              ]
            },
            "documentation": {
              "id": 33987,
              "nodeType": "StructuredDocumentation",
              "src": "6195:60:92",
              "text": "@notice Returns whether a given token id has been minted"
            },
            "functionSelector": "4f558e79",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nameLocation": "6269:6:92",
            "parameters": {
              "id": 33990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33989,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6284:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 33999,
                  "src": "6276:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6276:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6275:18:92"
            },
            "returnParameters": {
              "id": 33993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33992,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33999,
                  "src": "6320:4:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33991,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6320:4:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6319:6:92"
            },
            "scope": 34158,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 34020,
            "nodeType": "FunctionDefinition",
            "src": "6600:222:92",
            "nodes": [],
            "body": {
              "id": 34019,
              "nodeType": "Block",
              "src": "6762:60:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34015,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34002,
                        "src": "6796:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34016,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34004,
                        "src": "6806:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 34012,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6772:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$34158_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 34014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6778:17:92",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 806,
                      "src": "6772:23:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 34017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6772:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34018,
                  "nodeType": "ExpressionStatement",
                  "src": "6772:43:92"
                }
              ]
            },
            "baseFunctions": [806],
            "documentation": {
              "id": 34000,
              "nodeType": "StructuredDocumentation",
              "src": "6555:40:92",
              "text": "@dev See {ERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34009,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34002,
                    "src": "6748:8:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 34010,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34008,
                  "name": "onlyAllowedOperatorApproval",
                  "nameLocations": ["6720:27:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34691,
                  "src": "6720:27:92"
                },
                "nodeType": "ModifierInvocation",
                "src": "6720:37:92"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "6609:17:92",
            "overrides": {
              "id": 34007,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34006,
                  "name": "ERC721AUpgradeable",
                  "nameLocations": ["6692:18:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1892,
                  "src": "6692:18:92"
                }
              ],
              "src": "6683:28:92"
            },
            "parameters": {
              "id": 34005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34002,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6635:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34020,
                  "src": "6627:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6627:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34004,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "6650:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34020,
                  "src": "6645:13:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34003,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6645:4:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6626:33:92"
            },
            "returnParameters": {
              "id": 34011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6762:0:92"
            },
            "scope": 34158,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34041,
            "nodeType": "FunctionDefinition",
            "src": "6863:219:92",
            "nodes": [],
            "body": {
              "id": 34040,
              "nodeType": "Block",
              "src": "7033:49:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34036,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34023,
                        "src": "7057:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34037,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34025,
                        "src": "7067:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34033,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7043:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$34158_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 34035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7049:7:92",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 750,
                      "src": "7043:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 34038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7043:32:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34039,
                  "nodeType": "ExpressionStatement",
                  "src": "7043:32:92"
                }
              ]
            },
            "baseFunctions": [750],
            "documentation": {
              "id": 34021,
              "nodeType": "StructuredDocumentation",
              "src": "6828:30:92",
              "text": "@dev See {ERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34030,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34023,
                    "src": "7019:8:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 34031,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34029,
                  "name": "onlyAllowedOperatorApproval",
                  "nameLocations": ["6991:27:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34691,
                  "src": "6991:27:92"
                },
                "nodeType": "ModifierInvocation",
                "src": "6991:37:92"
              }
            ],
            "name": "approve",
            "nameLocation": "6872:7:92",
            "overrides": {
              "id": 34028,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34027,
                  "name": "ERC721AUpgradeable",
                  "nameLocations": ["6963:18:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1892,
                  "src": "6963:18:92"
                }
              ],
              "src": "6954:28:92"
            },
            "parameters": {
              "id": 34026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34023,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6888:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34041,
                  "src": "6880:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6880:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34025,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6906:7:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34041,
                  "src": "6898:15:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6898:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6879:35:92"
            },
            "returnParameters": {
              "id": 34032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7033:0:92"
            },
            "scope": 34158,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34065,
            "nodeType": "FunctionDefinition",
            "src": "7129:225:92",
            "nodes": [],
            "body": {
              "id": 34064,
              "nodeType": "Block",
              "src": "7300:54:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34059,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34044,
                        "src": "7329:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34060,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34046,
                        "src": "7335:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34061,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34048,
                        "src": "7339:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34056,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7310:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$34158_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 34058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7316:12:92",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1062,
                      "src": "7310:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 34062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7310:37:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34063,
                  "nodeType": "ExpressionStatement",
                  "src": "7310:37:92"
                }
              ]
            },
            "baseFunctions": [1062],
            "documentation": {
              "id": 34042,
              "nodeType": "StructuredDocumentation",
              "src": "7088:36:92",
              "text": "@dev See {ERC721-_transferFrom}."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34053,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34044,
                    "src": "7290:4:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 34054,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34052,
                  "name": "onlyAllowedOperator",
                  "nameLocations": ["7270:19:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34680,
                  "src": "7270:19:92"
                },
                "nodeType": "ModifierInvocation",
                "src": "7270:25:92"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "7138:12:92",
            "overrides": {
              "id": 34051,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34050,
                  "name": "ERC721AUpgradeable",
                  "nameLocations": ["7242:18:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1892,
                  "src": "7242:18:92"
                }
              ],
              "src": "7233:28:92"
            },
            "parameters": {
              "id": 34049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34044,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7159:4:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34065,
                  "src": "7151:12:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7151:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34046,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7173:2:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34065,
                  "src": "7165:10:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7165:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34048,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7185:7:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34065,
                  "src": "7177:15:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7177:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7150:43:92"
            },
            "returnParameters": {
              "id": 34055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7300:0:92"
            },
            "scope": 34158,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34089,
            "nodeType": "FunctionDefinition",
            "src": "7405:233:92",
            "nodes": [],
            "body": {
              "id": 34088,
              "nodeType": "Block",
              "src": "7580:58:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34083,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34068,
                        "src": "7613:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34084,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34070,
                        "src": "7619:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34085,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34072,
                        "src": "7623:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34080,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7590:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$34158_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 34082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7596:16:92",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1081,
                      "src": "7590:22:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 34086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7590:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34087,
                  "nodeType": "ExpressionStatement",
                  "src": "7590:41:92"
                }
              ]
            },
            "baseFunctions": [1081],
            "documentation": {
              "id": 34066,
              "nodeType": "StructuredDocumentation",
              "src": "7360:40:92",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34077,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34068,
                    "src": "7570:4:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 34078,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34076,
                  "name": "onlyAllowedOperator",
                  "nameLocations": ["7550:19:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34680,
                  "src": "7550:19:92"
                },
                "nodeType": "ModifierInvocation",
                "src": "7550:25:92"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "7414:16:92",
            "overrides": {
              "id": 34075,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34074,
                  "name": "ERC721AUpgradeable",
                  "nameLocations": ["7522:18:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1892,
                  "src": "7522:18:92"
                }
              ],
              "src": "7513:28:92"
            },
            "parameters": {
              "id": 34073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34068,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7439:4:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34089,
                  "src": "7431:12:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7431:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34070,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7453:2:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34089,
                  "src": "7445:10:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7445:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34072,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7465:7:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34089,
                  "src": "7457:15:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7457:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7430:43:92"
            },
            "returnParameters": {
              "id": 34079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7580:0:92"
            },
            "scope": 34158,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34116,
            "nodeType": "FunctionDefinition",
            "src": "7689:258:92",
            "nodes": [],
            "body": {
              "id": 34115,
              "nodeType": "Block",
              "src": "7883:64:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34109,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34092,
                        "src": "7916:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34110,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34094,
                        "src": "7922:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34111,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34096,
                        "src": "7926:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34112,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34098,
                        "src": "7935:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 34106,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7893:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$34158_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 34108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7899:16:92",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1119,
                      "src": "7893:22:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 34113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7893:47:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34114,
                  "nodeType": "ExpressionStatement",
                  "src": "7893:47:92"
                }
              ]
            },
            "baseFunctions": [1119],
            "documentation": {
              "id": 34090,
              "nodeType": "StructuredDocumentation",
              "src": "7644:40:92",
              "text": "@dev See {ERC721-_safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34103,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34092,
                    "src": "7873:4:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 34104,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34102,
                  "name": "onlyAllowedOperator",
                  "nameLocations": ["7853:19:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34680,
                  "src": "7853:19:92"
                },
                "nodeType": "ModifierInvocation",
                "src": "7853:25:92"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "7698:16:92",
            "overrides": {
              "id": 34101,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34100,
                  "name": "ERC721AUpgradeable",
                  "nameLocations": ["7825:18:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1892,
                  "src": "7825:18:92"
                }
              ],
              "src": "7816:28:92"
            },
            "parameters": {
              "id": 34099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34092,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7723:4:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34116,
                  "src": "7715:12:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7715:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34094,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7737:2:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34116,
                  "src": "7729:10:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7729:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34096,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7749:7:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34116,
                  "src": "7741:15:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7741:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34098,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7771:4:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 34116,
                  "src": "7758:17:92",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 34097,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7758:5:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7714:62:92"
            },
            "returnParameters": {
              "id": 34105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7883:0:92"
            },
            "scope": 34158,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34129,
            "nodeType": "FunctionDefinition",
            "src": "8233:103:92",
            "nodes": [],
            "body": {
              "id": 34128,
              "nodeType": "Block",
              "src": "8290:46:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 34126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 34122,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8307:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 34123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8311:6:92",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8307:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34124,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28827,
                        "src": "8321:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 34125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8321:8:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8307:22:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 34121,
                  "id": 34127,
                  "nodeType": "Return",
                  "src": "8300:29:92"
                }
              ]
            },
            "documentation": {
              "id": 34117,
              "nodeType": "StructuredDocumentation",
              "src": "8150:78:92",
              "text": "@dev Returns whether a token can be minted in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canMint",
            "nameLocation": "8242:8:92",
            "parameters": {
              "id": 34118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8250:2:92"
            },
            "returnParameters": {
              "id": 34121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34120,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34129,
                  "src": "8284:4:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34119,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8284:4:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8283:6:92"
            },
            "scope": 34158,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 34143,
            "nodeType": "FunctionDefinition",
            "src": "8427:122:92",
            "nodes": [],
            "body": {
              "id": 34142,
              "nodeType": "Block",
              "src": "8503:46:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 34140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 34136,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8520:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 34137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8524:6:92",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8520:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34138,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28827,
                        "src": "8534:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 34139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8534:8:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8520:22:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 34135,
                  "id": 34141,
                  "nodeType": "Return",
                  "src": "8513:29:92"
                }
              ]
            },
            "baseFunctions": [35287],
            "documentation": {
              "id": 34130,
              "nodeType": "StructuredDocumentation",
              "src": "8342:80:92",
              "text": "@dev Returns whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "8436:18:92",
            "overrides": {
              "id": 34132,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8479:8:92"
            },
            "parameters": {
              "id": 34131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8454:2:92"
            },
            "returnParameters": {
              "id": 34135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34143,
                  "src": "8497:4:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34133,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8497:4:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8496:6:92"
            },
            "scope": 34158,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 34157,
            "nodeType": "FunctionDefinition",
            "src": "8645:122:92",
            "nodes": [],
            "body": {
              "id": 34156,
              "nodeType": "Block",
              "src": "8721:46:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 34154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 34150,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8738:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 34151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8742:6:92",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8738:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34152,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28827,
                        "src": "8752:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 34153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8752:8:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8738:22:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 34149,
                  "id": 34155,
                  "nodeType": "Return",
                  "src": "8731:29:92"
                }
              ]
            },
            "baseFunctions": [34551],
            "documentation": {
              "id": 34144,
              "nodeType": "StructuredDocumentation",
              "src": "8555:85:92",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "8654:18:92",
            "overrides": {
              "id": 34146,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8697:8:92"
            },
            "parameters": {
              "id": 34145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8672:2:92"
            },
            "returnParameters": {
              "id": 34149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34148,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34157,
                  "src": "8715:4:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34147,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8715:4:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8714:6:92"
            },
            "scope": 34158,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33702,
              "name": "ERC721AUpgradeable",
              "nameLocations": ["1112:18:92"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1892,
              "src": "1112:18:92"
            },
            "id": 33703,
            "nodeType": "InheritanceSpecifier",
            "src": "1112:18:92"
          },
          {
            "baseName": {
              "id": 33704,
              "name": "Ownable",
              "nameLocations": ["1136:7:92"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28775,
              "src": "1136:7:92"
            },
            "id": 33705,
            "nodeType": "InheritanceSpecifier",
            "src": "1136:7:92"
          },
          {
            "baseName": {
              "id": 33706,
              "name": "ERC165BaseInternal",
              "nameLocations": ["1149:18:92"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29515,
              "src": "1149:18:92"
            },
            "id": 33707,
            "nodeType": "InheritanceSpecifier",
            "src": "1149:18:92"
          },
          {
            "baseName": {
              "id": 33708,
              "name": "MintMetadata",
              "nameLocations": ["1173:12:92"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34832,
              "src": "1173:12:92"
            },
            "id": 33709,
            "nodeType": "InheritanceSpecifier",
            "src": "1173:12:92"
          },
          {
            "baseName": {
              "id": 33710,
              "name": "BatchMintMetadata",
              "nameLocations": ["1191:17:92"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34221,
              "src": "1191:17:92"
            },
            "id": 33711,
            "nodeType": "InheritanceSpecifier",
            "src": "1191:17:92"
          },
          {
            "baseName": {
              "id": 33712,
              "name": "ContractMetadata",
              "nameLocations": ["1214:16:92"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34552,
              "src": "1214:16:92"
            },
            "id": 33713,
            "nodeType": "InheritanceSpecifier",
            "src": "1214:16:92"
          },
          {
            "baseName": {
              "id": 33714,
              "name": "DefaultOperatorFilterer",
              "nameLocations": ["1236:23:92"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34692,
              "src": "1236:23:92"
            },
            "id": 33715,
            "nodeType": "InheritanceSpecifier",
            "src": "1236:23:92"
          },
          {
            "baseName": {
              "id": 33716,
              "name": "Royalty",
              "nameLocations": ["1265:7:92"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35102,
              "src": "1265:7:92"
            },
            "id": 33717,
            "nodeType": "InheritanceSpecifier",
            "src": "1265:7:92"
          },
          {
            "baseName": {
              "id": 33718,
              "name": "Multicall",
              "nameLocations": ["1278:9:92"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31907,
              "src": "1278:9:92"
            },
            "id": 33719,
            "nodeType": "InheritanceSpecifier",
            "src": "1278:9:92"
          }
        ],
        "canonicalName": "ERC721Base",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34158, 31907, 31839, 35102, 35288, 34978, 29308, 29248,
          34692, 34816, 34824, 34552, 34606, 34653, 34221, 34459,
          34505, 34832, 34893, 29515, 29560, 29254, 29312, 28775,
          28899, 28712, 28701, 29274, 29284, 1892, 2227, 1995
        ],
        "name": "ERC721Base",
        "nameLocation": "1094:10:92",
        "scope": 34159,
        "usedErrors": [
          2027, 2030, 2033, 2036, 2039, 2042, 2045, 2048, 2051, 2054,
          2057, 2060, 2063, 28709, 28711, 29559, 34823
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 92
}

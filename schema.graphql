type App @entity {
  id: ID!
  owner: User!
  name: String!
  contracts: [Contract!]! @derivedFrom(field: "app")
  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type Contract @entity {
  id: ID!
  type: String!
  owner: User!
  metadata: ContractData!
  nfts: [NFT!] @derivedFrom(field: "contract")
  token: Token
  app: App
  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type ContractData @entity {
  id: ID!
  name: String!
  symbol: String!
  totalSupply: BigInt!
  burntSupply: BigInt!
  decimals: BigInt
  royaltyBps: BigInt
  royaltyRecipient: Bytes
}

type NFT @entity {
  id: ID!
  tokenId: BigInt!
  contract: Contract!
  owner: User!
  metadataURI: String!
  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type TokenBalance @entity {
  id: ID!
  user: User!
  token: Token!
  balance: BigInt!
  createdAt: BigInt!
  createdAtBlock: BigInt!
  updatedAt: BigInt!
  updatedAtBlock: BigInt!
}

type Token @entity {
  id: ID!
  balances: [TokenBalance!]! @derivedFrom(field: "token")
  contract: Contract!
  createdAt: BigInt!
  createdAtBlock: BigInt!
  updatedAt: BigInt!
  updatedAtBlock: BigInt!
}

type User @entity {
  id: ID!
  apps: [App!] @derivedFrom(field: "owner")
  contracts: [Contract!] @derivedFrom(field: "owner")
  tokens: [TokenBalance!] @derivedFrom(field: "user")
  nfts: [NFT!] @derivedFrom(field: "owner")
  createdAt: BigInt!
  createdAtBlock: BigInt!
  updatedAt: BigInt!
  updatedAtBlock: BigInt!
}

type Constellation @entity {
  id: ID!
  owner: User!
  name: String!
  stars: [Star!] @derivedFrom(field: "constellation")
  reward_token: FungibleToken!
  metadata: FungibleTokenMetadata
  createdAt: BigInt!
  createdAtBlock: BigInt!
  updatedAt: BigInt!
  updatedAtBlock: BigInt!
}

type FungibleTokenMetadata @entity {
  id: ID!
  URI: String!
  createdAt: BigInt!
  createdAtBlock: BigInt!
  updatedAt: BigInt!
  updatedAtBlock: BigInt!
}

type FungibleToken @entity {
  id: ID!
  name: String!
  owner: User!
  symbol: String!
  metadata: FungibleTokenMetadata
  star: Star
  totalSupply: BigInt!
  burntSupply: BigInt!
  createdAt: BigInt!
  createdAtBlock: BigInt!
  updatedAt: BigInt!
  updatedAtBlock: BigInt!
}

type FungibleTokenBalance @entity {
  id: ID!
  user: User!
  token: FungibleToken!
  balance: BigInt!
  createdAt: BigInt!
  createdAtBlock: BigInt!
  updatedAt: BigInt!
  updatedAtBlock: BigInt!
}

type Star @entity {
  id: ID!
  name: String!
  metadata: StarMetadata
  constellation: Constellation!
  owner: User!
  xp_token: FungibleToken
  badges: [Badge!] @derivedFrom(field: "star")
  createdAt: BigInt!
  createdAtBlock: BigInt!
  updatedAt: BigInt!
  updatedAtBlock: BigInt!
}

type StarMetadata @entity {
  id: ID!
  name: String!
  description: String!
  URI: String!
  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type BadgeToken @entity {
  id: ID!
  tokenId: BigInt!
  badge: Badge!
  metadataURI: String!
  owner: User
  createdAt: BigInt!
  createdAtBlock: BigInt!
  updatedAt: BigInt!
  updatedAtBlock: BigInt!
}

type CollectedBadge @entity {
  id: ID!
  user: User!
  metadataURI: String!
}

type Badge @entity {
  id: ID!
  name: String!
  symbol: String!
  tokens: [BadgeToken!] @derivedFrom(field: "badge")
  star: Star!
  royaltyBps: BigInt!
  royaltyRecipient: Bytes!
  totalAvailable: BigInt!
  totalClaimed: BigInt!
  createdAt: BigInt!
  createdAtBlock: BigInt!
  updatedAt: BigInt!
  updatedAtBlock: BigInt!
}

# @TODO - Implement IPFS data types
# type BadgeMetadata @entity {
#   id: ID!
#   name: String!
#   description: String!
#   image: String!
#   external_url: String!
#   animation_url: String!
#   URI: String!
#   createdAt: BigInt!
#   createdAtBlock: BigInt!
# }

type User @entity {
  id: ID!
  token_balances: [FungibleTokenBalance!] @derivedFrom(field: "user")
  collected_badges: [BadgeToken!] @derivedFrom(field: "owner")
  createdAt: BigInt!
  createdAtBlock: BigInt!
  updatedAt: BigInt!
  updatedAtBlock: BigInt!
}

type Action @entity {
  id: ID!
  metadata: ActionMetadata
  name: String
  star: Star
  user: User!
  xp_rewarded: BigInt!
  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type ActionMetadata @entity {
  id: ID!
  name: String
  URI: String!
}

type MissionRewardToken @entity {
  id: ID!
  token: [FungibleToken!]
  amount_rewarded: BigInt!
}

type Mission @entity {
  id: ID!
  metadata: String
  name: String!
  star: Star
  user: User!
  badges: [BadgeToken!]
  tokens: [MissionRewardToken!]
  createdAt: BigInt!
  createdAtBlock: BigInt!
}
